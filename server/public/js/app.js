let base_url = "http://neom.bet:3000";

App = {
    web3Provider: null,
    account: null,
    MatchInstance: null,
    MatchInstancePrice: null,

    CryptoInstance: null,
    CryptoInstancePrice: null,

    matches: {},
    currencyId: null,
    matchId: null,
    getAccount: function () {
        return new Promise((resolve, reject) => {
            web3.eth.getAccounts(function (error, accounts) {
                if (error) {
                    return reject(error);
                } else {
                    return resolve(accounts[0]);
                }
            });
        });
    },

    initWeb3: function () {
        return new Promise((resolve, reject) => {
            if (typeof web3 !== 'undefined') {
                App.web3Provider = web3.currentProvider;
            } else {
                App.web3Provider = new Web3.providers.HttpProvider('http://localhost:8545');
                alert("Please install Metamask before proceeding.");
                return;
            }
            web3 = new Web3(App.web3Provider);
            if (web3 == null || typeof web3 === 'undefined') {
                return reject("Something went wrong");
            } else {
                return resolve("Successfully connected to Web3 Provider.");
            }
        });
    },

    createMatchesBetContract: function () {
        let temp_match_id = App.matchId;
        let current_data = {};
        let match = App.matches[+App.matchId];
        let price = $("#subscription_price").val();
        let visibility_flag = $('#visibility_flag option:selected').val();
        let _league = match["league"];
        let _teamOne = match["homeTeam"]["name"];
        let _teamTwo = match["awayTeam"]["name"];
        let _matchTimestamp = Math.floor(new Date(match["utcDate"]).getTime() / 1000);
        let _executionDelay = _matchTimestamp + (3 * 60 * 60);
        let _price = +price * 1e18;
        console.log(+App.matchId, _league, _teamOne, _teamTwo, _matchTimestamp, _executionDelay, _price);
        var SolidSportBet = web3.eth.contract(App.SOLID_SPORT_BET_ABI);
        var SolidSportBetInstance = SolidSportBet.new(+App.matchId, _league, _teamOne, _teamTwo, _matchTimestamp, _executionDelay, _price, {
                from: App.account,
                value: 0.1 * 1e18,
                data: '0x60806040526000600655600a60075560405160e080620037dc83398101806040528101908080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190505050662386f26fc1000034101515156200008457600080fd5b86600881905550856009816000191690555084600a816000191690555083600b816000191690555082600c8190555081600d8190555080600e8190555073908e009ea04508db32933f463dec7d1d60aaa93f600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200012f6200013c640100000000026401000000009004565b50505050505050620019c4565b6060806060620001906040805190810160405280600381526020017f55524c000000000000000000000000000000000000000000000000000000000081525062000356640100000000026401000000009004565b3073ffffffffffffffffffffffffffffffffffffffff16311115156200021e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600a8152602001807f6e6f20617069206665650000000000000000000000000000000000000000000081525060200191505060405180910390fd5b6040805190810160405280602081526020017f687474703a2f2f6e656f6d2e6265743a333030302f76312f6d6174636865732f81525092506200027260085462000757640100000000026401000000009004565b9150620002fb6040805190810160405280600581526020017f6a736f6e2800000000000000000000000000000000000000000000000000000081525084846040805190810160405280600581526020017f292e726177000000000000000000000000000000000000000000000000000000815250620008b9640100000000026401000000009004565b905062000350600d546040805190810160405280600381526020017f55524c00000000000000000000000000000000000000000000000000000000008152508362000914640100000000026401000000009004565b50505050565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480620003d857506000620003d66000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1662000ef2640100000000026401000000009004565b145b15620003fb57620003f9600062000efd640100000000026401000000009004565b505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156200048157600080fd5b505af115801562000496573d6000803e3d6000fd5b505050506040513d6020811015620004ad57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151562000619576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156200059b57600080fd5b505af1158015620005b0573d6000803e3d6000fd5b505050506040513d6020811015620005c757600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b83811015620006c5578082015181840152602081019050620006a8565b50505050905090810190601f168015620006f35780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b1580156200071357600080fd5b505af115801562000728573d6000803e3d6000fd5b505050506040513d60208110156200073f57600080fd5b81019080805190602001909291905050509050919050565b60606000806060600080861415620007a7576040805190810160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509450620008b0565b8593505b600084141515620007d4578280600101935050600a84811515620007cb57fe5b049350620007ab565b826040519080825280601f01601f191660200182016040528015620008085781602001602082028038833980820191505090505b5091506001830390505b600086141515620008ac57600a868115156200082a57fe5b066030017f0100000000000000000000000000000000000000000000000000000000000000028282806001900393508151811015156200086657fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a86811515620008a357fe5b04955062000812565b8194505b50505050919050565b60606200090a85620008f586620008e0878762000f1f640100000000026401000000009004565b62000f1f640100000000026401000000009004565b62000f1f640100000000026401000000009004565b9050949350505050565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806200099857506000620009966000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1662000ef2640100000000026401000000009004565b145b15620009bb57620009b9600062000efd640100000000026401000000009004565b505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801562000a4157600080fd5b505af115801562000a56573d6000803e3d6000fd5b505050506040513d602081101562000a6d57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151562000bd9576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801562000b5b57600080fd5b505af115801562000b70573d6000803e3d6000fd5b505050506040513d602081101562000b8757600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889856040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b8381101562000c8557808201518184015260208101905062000c68565b50505050905090810190601f16801562000cb35780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b15801562000cd357600080fd5b505af115801562000ce8573d6000803e3d6000fd5b505050506040513d602081101562000cff57600080fd5b8101908080519060200190929190505050905062030d403a02670de0b6b3a76400000181111562000d37576000600102915062000eea565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663adf59f99828787876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b8381101562000df057808201518184015260208101905062000dd3565b50505050905090810190601f16801562000e1e5780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b8381101562000e5957808201518184015260208101905062000e3c565b50505050905090810190601f16801562000e875780820380516001836020036101000a031916815260200191505b50955050505050506020604051808303818588803b15801562000ea957600080fd5b505af115801562000ebe573d6000803e3d6000fd5b50505050506040513d602081101562000ed657600080fd5b810190808051906020019092919050505091505b509392505050565b6000813b9050919050565b600062000f1862000f77640100000000026401000000009004565b9050919050565b606062000f6f8383602060405190810160405280600081525060206040519081016040528060008152506020604051908101604052806000815250620014cf640100000000026401000000009004565b905092915050565b60008062000fa8731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed62000ef2640100000000026401000000009004565b11156200105c57731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620010526040805190810160405280600b81526020017f6574685f6d61696e6e6574000000000000000000000000000000000000000000815250620018f9640100000000026401000000009004565b60019050620014cc565b60006200108c73c03a2615d5efaf5f49f60b7bb6583eaec212fdf162000ef2640100000000026401000000009004565b1115620011405773c03a2615d5efaf5f49f60b7bb6583eaec212fdf16000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620011366040805190810160405280600c81526020017f6574685f726f707374656e330000000000000000000000000000000000000000815250620018f9640100000000026401000000009004565b60019050620014cc565b60006200117073b7a07bcf2ba2f2703b24c0691b5278999c59ac7e62000ef2640100000000026401000000009004565b1115620012245773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200121a6040805190810160405280600981526020017f6574685f6b6f76616e0000000000000000000000000000000000000000000000815250620018f9640100000000026401000000009004565b60019050620014cc565b60006200125473146500cfd35b22e4a392fe0adc06de1a1368ed4862000ef2640100000000026401000000009004565b1115620013085773146500cfd35b22e4a392fe0adc06de1a1368ed486000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620012fe6040805190810160405280600b81526020017f6574685f72696e6b656279000000000000000000000000000000000000000000815250620018f9640100000000026401000000009004565b60019050620014cc565b600062001338736f485c8bf6fc43ea212e93bbf8ce046c7f1cb47562000ef2640100000000026401000000009004565b11156200139d57736f485c8bf6fc43ea212e93bbf8ce046c7f1cb4756000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050620014cc565b6000620013cd7320e12a1f859b3feae5fb2a0a32c18f5a65555bbf62000ef2640100000000026401000000009004565b111562001432577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050620014cc565b6000620014627351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa62000ef2640100000000026401000000009004565b1115620014c7577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050620014cc565b600090505b90565b6060806060806060806060806000808e98508d97508c96508b95508a94508451865188518a518c51010101016040519080825280601f01601f1916602001820160405280156200152e5781602001602082028038833980820191505090505b50935083925060009150600090505b8851811015620015f45788818151811015156200155657fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000028383806001019450815181101515620015b657fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506200153d565b600090505b8751811015620016b05787818151811015156200161257fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f01000000000000000000000000000000000000000000000000000000000000000283838060010194508151811015156200167257fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050620015f9565b600090505b86518110156200176c578681815181101515620016ce57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f01000000000000000000000000000000000000000000000000000000000000000283838060010194508151811015156200172e57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050620016b5565b600090505b8551811015620018285785818151811015156200178a57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000028383806001019450815181101515620017ea57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505062001771565b600090505b8451811015620018e45784818151811015156200184657fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000028383806001019450815181101515620018a657fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506200182d565b82995050505050505050505095945050505050565b80600290805190602001906200191192919062001915565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200195857805160ff191683800117855562001989565b8280016001018555821562001989579182015b82811115620019885782518255916020019190600101906200196b565b5b5090506200199891906200199c565b5090565b620019c191905b80821115620019bd576000816000905550600101620019a3565b5090565b90565b611e0880620019d46000396000f300608060405260043610610078576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806327dc297e1461007d57806338bbfa50146100f45780634fb2e45d146101b1578063565974d3146101f45780638437081314610268578063df7bf70414610292575b600080fd5b34801561008957600080fd5b506100f26004803603810190808035600019169060200190929190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506102c4565b005b34801561010057600080fd5b506101af6004803603810190808035600019169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061049b565b005b3480156101bd57600080fd5b506101f2600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104a0565b005b34801561020057600080fd5b50610209610540565b604051808981526020018860001916600019168152602001876000191660001916815260200186600019166000191681526020018581526020018481526020018381526020018281526020019850505050505050505060405180910390f35b610290600480360381019080803590602001909291908035906020019092919050505061057e565b005b34801561029e57600080fd5b506102a76106f9565b604051808381526020018281526020019250505060405180910390f35b6102cc610710565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806103525750600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b801561036057506000600654145b15156103d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f496e76616c6964204f7261636c652043616c6c6261636b00000000000000000081525060200191505060405180910390fd5b7fb749f9f34ea0f118080413f464339dbd20e14dc877db555d47b85ff4f418d649816040518080602001828103825283818151815260200191508051906020019080838360005b8381101561043657808201518184015260208101905061041b565b50505050905090810190601f1680156104635780820380516001836020036101000a031916815260200191505b509250505060405180910390a18060149080519060200190610486929190611d16565b5061048f610a6e565b6104976110d5565b5050565b505050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156104fc57600080fd5b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080600080600080600080600854600954600a54600b54600c54600d54600e54600654975097509750975097509750975097509091929394959697565b3373ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff161480156105bb5750600e543410155b80156105c957506103e88211155b80156105d757506103e88111155b15156105e257600080fd5b600f6060604051908101604052803373ffffffffffffffffffffffffffffffffffffffff168152602001848152602001838152509080600181540180825580915050906001820390600052602060002090600302016000909192909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201555050503373ffffffffffffffffffffffffffffffffffffffff167fd9fd7ff1b2e807f687c0bbd788ba5362d0e7c7bdcdbea264adf9457c9e2b35ec8383604051808381526020018281526020019250505060405180910390a25050565b600080601060010154601060020154915091509091565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806107805750600061077e6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff166112d1565b145b156107915761078f60006112dc565b505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561081657600080fd5b505af115801561082a573d6000803e3d6000fd5b505050506040513d602081101561084057600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156109a8576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561092c57600080fd5b505af1158015610940573d6000803e3d6000fd5b505050506040513d602081101561095657600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610a2e57600080fd5b505af1158015610a42573d6000803e3d6000fd5b505050506040513d6020811015610a5857600080fd5b8101908080519060200190929190505050905090565b600080600080600080610b5060148054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b105780601f10610ae557610100808354040283529160200191610b10565b820191906000526020600020905b815481529060010190602001808311610af357829003601f168201915b50505050506040805190810160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152506112ed565b15610b5a576110cd565b610bff60148054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610bf35780601f10610bc857610100808354040283529160200191610bf3565b820191906000526020600020905b815481529060010190602001808311610bd657829003601f168201915b505050505060006114b3565b9550620f423f861115610c11576110cd565b60016006819055506103e886811515610c2657fe5b0494506103e88502860393506060604051908101604052803373ffffffffffffffffffffffffffffffffffffffff16815260200186815260200185815250601060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201559050506402540be4009150600090505b600f8054905081101561108d57610df16010606060405190810160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282015481525050600f83815481101515610d6857fe5b9060005260206000209060030201606060405190810160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815250506117a7565b1561108057610f09600f82815481101515610e0857fe5b9060005260206000209060030201606060405190810160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815250506010606060405190810160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282015481525050611819565b925081831015610fcf5782915060136000610f249190611d96565b6013600f82815481101515610f3557fe5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061107f565b8183141561107e576013600f82815481101515610fe857fe5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505b5b5b8080600101915050610cd1565b7ffce25d0084d4e4c40132a93c5b5630453901e52fb4e21103e4c07802e8a36ada8585604051808381526020018281526020019250505060405180910390a15b505050505050565b600080600060075460640392503073ffffffffffffffffffffffffffffffffffffffff16319150600060138054905011156112495760646013805490500283830281151561111f57fe5b049250600090505b6013805490508110156112485760138181548110151561114357fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc849081150290604051600060405180830381858888f193505050501580156111b3573d6000803e3d6000fd5b506013818154811015156111c357fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fe996987d056eca0e2ed60cc6fd77731e38c3a90676a4b93a436854cabbdac12f846040518082815260200191505060405180910390a28080600101915050611127565b5b3073ffffffffffffffffffffffffffffffffffffffff16319150600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f193505050501580156112cb573d6000803e3d6000fd5b50505050565b6000813b9050919050565b60006112e6611848565b9050919050565b60008151835114151561130357600090506114ad565b816040516020018082805190602001908083835b60208310151561133c5780518252602082019150602081019050602083039250611317565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b6020831015156113a55780518252602082019150602081019050602083039250611380565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060001916836040516020018082805190602001908083835b60208310151561140f57805182526020820191506020810190506020830392506113ea565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b6020831015156114785780518252602082019150602081019050602083039250611453565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020600019161490505b92915050565b6000606060008060008693506000925060009150600090505b83518110156117885760307f010000000000000000000000000000000000000000000000000000000000000002848281518110151561150757fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161015801561161f575060397f01000000000000000000000000000000000000000000000000000000000000000284828151811015156115af57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191611155b156116d057811561164257600086141561163857611788565b8580600190039650505b600a830292506030848281518110151561165857fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f01000000000000000000000000000000000000000000000000000000000000009004038301925061177b565b602e7f010000000000000000000000000000000000000000000000000000000000000002848281518110151561170257fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141561177a57600191505b5b80806001019150506114cc565b600086111561179a5785600a0a830292505b8294505050505092915050565b6000826040015183602001511180156117c7575081604001518260200151115b806117ec5750826040015183602001511080156117eb575081604001518260200151105b5b80611811575082604001518360200151148015611810575081604001518260200151145b5b905092915050565b600061182d83604001518360400151611cd7565b61183f84602001518460200151611cd7565b01905092915050565b600080611868731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed6112d1565b111561190957731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506119006040805190810160405280600b81526020017f6574685f6d61696e6e6574000000000000000000000000000000000000000000815250611cfc565b60019050611cd4565b600061192873c03a2615d5efaf5f49f60b7bb6583eaec212fdf16112d1565b11156119c95773c03a2615d5efaf5f49f60b7bb6583eaec212fdf16000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506119c06040805190810160405280600c81526020017f6574685f726f707374656e330000000000000000000000000000000000000000815250611cfc565b60019050611cd4565b60006119e873b7a07bcf2ba2f2703b24c0691b5278999c59ac7e6112d1565b1115611a895773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611a806040805190810160405280600981526020017f6574685f6b6f76616e0000000000000000000000000000000000000000000000815250611cfc565b60019050611cd4565b6000611aa873146500cfd35b22e4a392fe0adc06de1a1368ed486112d1565b1115611b495773146500cfd35b22e4a392fe0adc06de1a1368ed486000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611b406040805190810160405280600b81526020017f6574685f72696e6b656279000000000000000000000000000000000000000000815250611cfc565b60019050611cd4565b6000611b68736f485c8bf6fc43ea212e93bbf8ce046c7f1cb4756112d1565b1115611bcb57736f485c8bf6fc43ea212e93bbf8ce046c7f1cb4756000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611cd4565b6000611bea7320e12a1f859b3feae5fb2a0a32c18f5a65555bbf6112d1565b1115611c4d577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611cd4565b6000611c6c7351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa6112d1565b1115611ccf577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611cd4565b600090505b90565b6000818311611cec5782820383830302611cf4565b818303828403025b905092915050565b8060029080519060200190611d12929190611d16565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611d5757805160ff1916838001178555611d85565b82800160010185558215611d85579182015b82811115611d84578251825591602001919060010190611d69565b5b509050611d929190611db7565b5090565b5080546000825590600052602060002090810190611db49190611db7565b50565b611dd991905b80821115611dd5576000816000905550600101611dbd565b5090565b905600a165627a7a7230582001ae74ca3e79664fc605a4bb4d2a50029b0d51c05ee601a98b68bcd3e402d6440029',
                gas: '4700000'
            },

            function (err, deployedContract) {
                if (!err) {
                    if (!deployedContract.address) {
                        console.log(deployedContract["transactionHash"]);
                        $('#addMatchModal').modal('hide');
                        $('#solidBetTransactionModal').modal({
                            keyboard: false,
                            show: true
                        });

                        $.ajax({
                            method: 'POST',
                            contentType: 'application/json',
                            url: base_url + '/v1/contracts/add',
                            data: JSON.stringify({
                                account: App.account,
                                type: +visibility_flag,
                                uuid: +App.matchId,
                                category: 'sports',
                                transactionHash: deployedContract["transactionHash"],
                                execution_time: Math.floor(new Date(match["utcDate"]).getTime() / 1000),
                                subscription_price: _price
                            }),
                            success: function (data, textStatus, jqXHR) {
                                current_data = data;
                                if (data['success']) {
                                    let content = "";
                                    let link = `https://ropsten.etherscan.io/tx/${deployedContract["transactionHash"]}`;
                                    content += `Track your transaction by clicking <a href="${link}" target="_blank">here</a>`;
                                    $("#solidBetTransactionModalBody").html(content);
                                }
                            },
                            error: function (jqXHR, textStatus, errorThrown) {
                                console.log('Failed to post data.');
                            }
                        });

                    } else {
                        if (current_data['success']) {
                            $('#addTickerModal').modal('hide');
                            $('#solidBetTransactionModal').modal({
                                keyboard: false,
                                show: true
                            });
                            console.log(deployedContract.address);
                            let deployed_contract_content = "";
                            let link = `https://ropsten.etherscan.io/address/${deployedContract["address"]}`;
                            let local_link = `./contracts/${+temp_match_id}/${current_data['result'][0]}`;
                            deployed_contract_content += `Successfully created and deployed contract for match: ${+temp_match_id}.<br/>`;
                            deployed_contract_content += `Check your contract on the ropsten network <a href="${link}" target="_blank">here</a><br/>`;
                            deployed_contract_content += `Check your deployed contract bet by clicking <a href="${local_link}" target="_blank">here</a><br/>`;
                            $("#solidBetTransactionModalBody").html(deployed_contract_content);
                        }
                    }
                } else {
                    console.log(err);
                }
            });
    },

    createCryptoBetContract: function () {
        let current_data = {};
        var _creator = App.account;
        var _currency = App.currencyId;
        let __closure_delay = $("#closure_delay").val();
        let __execution_delay = $("#execution_delay").val();
        let visibility_flag = $('#visibility_flag option:selected').val();
        let _closureDelay = (new Date(__closure_delay).getTime() - new Date().getTime()) / 1000;
        let _executionDelay = (new Date(__execution_delay).getTime() - new Date().getTime()) / 1000;
        var _subscriptionPrice = $("#subscription_price").val() * 1e18;

        var cryptopricebetContract = web3.eth.contract(App.SOLID_CRYPTO_BET_ABI);
        var cryptopricebet = cryptopricebetContract.new(
            _creator,
            _currency,
            _closureDelay,
            _executionDelay,
            _subscriptionPrice,
            {
                from: App.account,
                value: 0.1 * 1e18,
                data: '0x60806040526000600560146101000a81548160ff0219169083151502179055506000600560156101000a81548160ff0219169083151502179055506000600b60006101000a81548160ff021916908360038111156200005a57fe5b021790555060405160a08062004c41833981018060405281019080805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919050505033600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818310151562000163576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f496e76616c69642054696d696e6700000000000000000000000000000000000081525060200191505060405180910390fd5b4260078190555033600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084601360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600681905550826008819055508160098190555080600a81905550620002216200022c640100000000026401000000009004565b50505050506200139e565b6200027b6040805190810160405280600381526020017f55524c00000000000000000000000000000000000000000000000000000000008152506200036f640100000000026401000000009004565b3073ffffffffffffffffffffffffffffffffffffffff163111151562000309576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260078152602001807f4e6f204247617a0000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b6200036c6008546040805190810160405280600381526020017f55524c0000000000000000000000000000000000000000000000000000000000815250602060405190810160405280600081525062000770640100000000026401000000009004565b50565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480620003f157506000620003ef6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1662000d4e640100000000026401000000009004565b145b15620004145762000412600062000d59640100000000026401000000009004565b505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156200049a57600080fd5b505af1158015620004af573d6000803e3d6000fd5b505050506040513d6020811015620004c657600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151562000632576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015620005b457600080fd5b505af1158015620005c9573d6000803e3d6000fd5b505050506040513d6020811015620005e057600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b83811015620006de578082015181840152602081019050620006c1565b50505050905090810190601f1680156200070c5780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b1580156200072c57600080fd5b505af115801562000741573d6000803e3d6000fd5b505050506040513d60208110156200075857600080fd5b81019080805190602001909291905050509050919050565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480620007f457506000620007f26000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1662000d4e640100000000026401000000009004565b145b15620008175762000815600062000d59640100000000026401000000009004565b505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156200089d57600080fd5b505af1158015620008b2573d6000803e3d6000fd5b505050506040513d6020811015620008c957600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151562000a35576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015620009b757600080fd5b505af1158015620009cc573d6000803e3d6000fd5b505050506040513d6020811015620009e357600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889856040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b8381101562000ae157808201518184015260208101905062000ac4565b50505050905090810190601f16801562000b0f5780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b15801562000b2f57600080fd5b505af115801562000b44573d6000803e3d6000fd5b505050506040513d602081101562000b5b57600080fd5b8101908080519060200190929190505050905062030d403a02670de0b6b3a76400000181111562000b93576000600102915062000d46565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663adf59f99828787876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b8381101562000c4c57808201518184015260208101905062000c2f565b50505050905090810190601f16801562000c7a5780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b8381101562000cb557808201518184015260208101905062000c98565b50505050905090810190601f16801562000ce35780820380516001836020036101000a031916815260200191505b50955050505050506020604051808303818588803b15801562000d0557600080fd5b505af115801562000d1a573d6000803e3d6000fd5b50505050506040513d602081101562000d3257600080fd5b810190808051906020019092919050505091505b509392505050565b6000813b9050919050565b600062000d7462000d7b640100000000026401000000009004565b9050919050565b60008062000dac731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed62000d4e640100000000026401000000009004565b111562000e6057731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000e566040805190810160405280600b81526020017f6574685f6d61696e6e6574000000000000000000000000000000000000000000815250620012d3640100000000026401000000009004565b60019050620012d0565b600062000e9073c03a2615d5efaf5f49f60b7bb6583eaec212fdf162000d4e640100000000026401000000009004565b111562000f445773c03a2615d5efaf5f49f60b7bb6583eaec212fdf16000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000f3a6040805190810160405280600c81526020017f6574685f726f707374656e330000000000000000000000000000000000000000815250620012d3640100000000026401000000009004565b60019050620012d0565b600062000f7473b7a07bcf2ba2f2703b24c0691b5278999c59ac7e62000d4e640100000000026401000000009004565b1115620010285773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200101e6040805190810160405280600981526020017f6574685f6b6f76616e0000000000000000000000000000000000000000000000815250620012d3640100000000026401000000009004565b60019050620012d0565b60006200105873146500cfd35b22e4a392fe0adc06de1a1368ed4862000d4e640100000000026401000000009004565b11156200110c5773146500cfd35b22e4a392fe0adc06de1a1368ed486000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620011026040805190810160405280600b81526020017f6574685f72696e6b656279000000000000000000000000000000000000000000815250620012d3640100000000026401000000009004565b60019050620012d0565b60006200113c736f485c8bf6fc43ea212e93bbf8ce046c7f1cb47562000d4e640100000000026401000000009004565b1115620011a157736f485c8bf6fc43ea212e93bbf8ce046c7f1cb4756000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050620012d0565b6000620011d17320e12a1f859b3feae5fb2a0a32c18f5a65555bbf62000d4e640100000000026401000000009004565b111562001236577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050620012d0565b6000620012667351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa62000d4e640100000000026401000000009004565b1115620012cb577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050620012d0565b600090505b90565b8060029080519060200190620012eb929190620012ef565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200133257805160ff191683800117855562001363565b8280016001018555821562001363579182015b828111156200136257825182559160200191906001019062001345565b5b50905062001372919062001376565b5090565b6200139b91905b80821115620013975760008160009055506001016200137d565b5090565b90565b61389380620013ae6000396000f300608060405260043610610133576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630f574ba714610138578063200d2ed21461016c57806327dc297e146101a557806338bbfa501461021c5780633f4ba83a146102d957806348c4a7ef146102f05780634ef9b89c1461031b5780635797100d1461037257806359221a68146103895780635c975abb146103f657806361bc221a1461042557806365372147146104505780638456cb59146104e05780638b257989146104f75780638da5cb5b146105225780639ead8f9d14610579578063a2fb1175146105a4578063bdc8e54c14610611578063d8270dce1461063c578063e3ae85f014610667578063e5a6b10f14610692578063efbe1c1c146106bd578063f2fde38b146106d4575b600080fd5b61015660048036038101908080359060200190929190505050610717565b6040518082815260200191505060405180910390f35b34801561017857600080fd5b50610181610949565b6040518082600381111561019157fe5b60ff16815260200191505060405180910390f35b3480156101b157600080fd5b5061021a6004803603810190808035600019169060200190929190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061095c565b005b34801561022857600080fd5b506102d76004803603810190808035600019169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610a7e565b005b3480156102e557600080fd5b506102ee610a83565b005b3480156102fc57600080fd5b50610305610bac565b6040518082815260200191505060405180910390f35b34801561032757600080fd5b5061035c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610bb2565b6040518082815260200191505060405180910390f35b34801561037e57600080fd5b50610387610bca565b005b34801561039557600080fd5b506103b460048036038101908080359060200190929190505050610e2d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561040257600080fd5b5061040b610e6b565b604051808215151515815260200191505060405180910390f35b34801561043157600080fd5b5061043a610e7e565b6040518082815260200191505060405180910390f35b34801561045c57600080fd5b50610465610e84565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104a557808201518184015260208101905061048a565b50505050905090810190601f1680156104d25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156104ec57600080fd5b506104f5610f26565b005b34801561050357600080fd5b5061050c611050565b6040518082815260200191505060405180910390f35b34801561052e57600080fd5b50610537611056565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561058557600080fd5b5061058e61107c565b6040518082815260200191505060405180910390f35b3480156105b057600080fd5b506105cf60048036038101908080359060200190929190505050611082565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561061d57600080fd5b506106266110c0565b6040518082815260200191505060405180910390f35b34801561064857600080fd5b506106516110c6565b6040518082815260200191505060405180910390f35b34801561067357600080fd5b5061067c6110cc565b6040518082815260200191505060405180910390f35b34801561069e57600080fd5b506106a76110d2565b6040518082815260200191505060405180910390f35b3480156106c957600080fd5b506106d26110d8565b005b3480156106e057600080fd5b50610715600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506111d8565b005b6000600560159054906101000a900460ff1615151561073557600080fd5b6001600560156101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff161480156107b057506000600381111561079357fe5b600b60009054906101000a900460ff1660038111156107ae57fe5b145b80156107fb57506000600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054145b80156108075750600082115b80156108155750600a543410155b151561082057600080fd5b600c3390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505081600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff167f9e30c3511470799100eca17de5157a6dcc306189b2380a3156e4e0ba8f0f5624836040518082815260200191505060405180910390a260116000815460010191905081905590506000600560156101000a81548160ff021916908315150217905550919050565b600b60009054906101000a900460ff1681565b610964611399565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610a06576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f496e76616c6964204f7261636c652043616c6c6261636b00000000000000000081525060200191505060405180910390fd5b60006003811115610a1357fe5b600b60009054906101000a900460ff166003811115610a2e57fe5b1415610a4157610a3c6116f7565b610a7a565b60016003811115610a4e57fe5b600b60009054906101000a900460ff166003811115610a6957fe5b1415610a7957610a7881611955565b5b5b5050565b505050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610b48576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f4e6f2050726976696c656765000000000000000000000000000000000000000081525060200191505060405180910390fd5b600560149054906101000a900460ff161515610b6357600080fd5b6000600560146101000a81548160ff0219169083151502179055507f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b60085481565b600d6020528060005260406000206000915090505481565b6000600560159054906101000a900460ff16151515610be857600080fd5b6001600560156101000a81548160ff021916908315150217905550600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610cc8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f4e6f2050726976696c656765000000000000000000000000000000000000000081525060200191505060405180910390fd5b600380811115610cd457fe5b600b60009054906101000a900460ff166003811115610cef57fe5b141515610d64576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f4e6f74204170706c696361626c6500000000000000000000000000000000000081525060200191505060405180910390fd5b7fd4980e00002f67ad8fb838ac40b098f695814ed62eccaed4e0d1419d27d53f3e600b60009054906101000a900460ff16600160405180836003811115610da757fe5b60ff168152602001826003811115610dbb57fe5b60ff1681526020019250505060405180910390a16001600b60006101000a81548160ff02191690836003811115610dee57fe5b02179055506009549050600a600981905550610e086116f7565b806009819055506000600560156101000a81548160ff02191690831515021790555050565b600c81815481101515610e3c57fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600560149054906101000a900460ff1681565b60115481565b606060128054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610f1c5780601f10610ef157610100808354040283529160200191610f1c565b820191906000526020600020905b815481529060010190602001808311610eff57829003601f168201915b5050505050905090565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610feb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f4e6f2050726976696c656765000000000000000000000000000000000000000081525060200191505060405180910390fd5b600560149054906101000a900460ff1615151561100757600080fd5b6001600560146101000a81548160ff0219169083151502179055507f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b60095481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600f5481565b600e8181548110151561109157fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a5481565b60075481565b60105481565b60065481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561119d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f4e6f2050726976696c656765000000000000000000000000000000000000000081525060200191505060405180910390fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561129d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f4e6f2050726976696c656765000000000000000000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156112d957600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480611409575060006114076000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff166120c7565b145b1561141a5761141860006120d2565b505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561149f57600080fd5b505af11580156114b3573d6000803e3d6000fd5b505050506040513d60208110156114c957600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611631576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156115b557600080fd5b505af11580156115c9573d6000803e3d6000fd5b505050506040513d60208110156115df57600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156116b757600080fd5b505af11580156116cb573d6000803e3d6000fd5b505050506040513d60208110156116e157600080fd5b8101908080519060200190929190505050905090565b6060807fd4980e00002f67ad8fb838ac40b098f695814ed62eccaed4e0d1419d27d53f3e600b60009054906101000a900460ff1660016040518083600381111561173d57fe5b60ff16815260200182600381111561175157fe5b60ff1681526020019250505060405180910390a16001600b60006101000a81548160ff0219169083600381111561178457fe5b02179055506117c76040805190810160405280600381526020017f55524c00000000000000000000000000000000000000000000000000000000008152506120e3565b3073ffffffffffffffffffffffffffffffffffffffff1631111515611854576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260078152602001807f4e6f204247617a0000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b606060405190810160405280602d81526020017f6a736f6e2868747470733a2f2f6170692e636f696e6d61726b65746361702e6381526020017f6f6d2f76322f7469636b65722f0000000000000000000000000000000000000081525091506118fc6118c16006546124b3565b6040805190810160405280601881526020017f2f292e646174612e71756f7465732e5553442e7072696365000000000000000081525061260a565b9050611908828261260a565b9150611950600854600954036040805190810160405280600381526020017f55524c000000000000000000000000000000000000000000000000000000000081525084612651565b505050565b600080600080600060606000806000806000806001600381111561197557fe5b600b60009054906101000a900460ff16600381111561199057fe5b14806119c057506003808111156119a357fe5b600b60009054906101000a900460ff1660038111156119be57fe5b145b1515611a34576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f496e76616c69642053746174757300000000000000000000000000000000000081525060200191505060405180910390fd5b8c60129080519060200190611a4a9291906137c2565b50611a568d6006612bf3565b9a5060009750600c80549050604051908082528060200260200182016040528015611a905781602001602082028038833980820191505090505b50965060008b11156120285760009b505b600c805490508c1015611cfa57611b30600d6000600c8f815481101515611ac457fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548c612ee7565b995060008c1415611b425760018a0198505b888a1015611c595760009750600c8c815481101515611b5d57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168789815181101515611b9657fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050899850600d6000600c8e815481101515611be857fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600f81905550611ced565b888a1415611cec57600c8c815481101515611c7057fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168789600101995089815181101515611caf57fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b5b8b806001019c5050611aa1565b601154600a54029550606460468702811515611d1257fe5b0494506001880185811515611d2357fe5b0493508486039250606460468402811515611d3a57fe5b0491508183039050853073ffffffffffffffffffffffffffffffffffffffff16310381019050600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015611dc8573d6000803e3d6000fd5b50601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015611e31573d6000803e3d6000fd5b5060009b505b878c111515611f8d57600e878d815181101515611e5057fe5b9060200190602002015190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050868c815181101515611ecb57fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff166108fc859081150290604051600060405180830381858888f19350505050158015611f1a573d6000803e3d6000fd5b50868c815181101515611f2957fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff167fe996987d056eca0e2ed60cc6fd77731e38c3a90676a4b93a436854cabbdac12f856040518082815260200191505060405180910390a28b806001019c5050611e37565b836010819055507fd4980e00002f67ad8fb838ac40b098f695814ed62eccaed4e0d1419d27d53f3e600b60009054906101000a900460ff16600260405180836003811115611fd757fe5b60ff168152602001826003811115611feb57fe5b60ff1681526020019250505060405180910390a16002600b60006101000a81548160ff0219169083600381111561201e57fe5b02179055506120b8565b7fd4980e00002f67ad8fb838ac40b098f695814ed62eccaed4e0d1419d27d53f3e600b60009054906101000a900460ff1660036040518083600381111561206b57fe5b60ff16815260200182600381111561207f57fe5b60ff1681526020019250505060405180910390a16003600b60006101000a81548160ff021916908360038111156120b257fe5b02179055505b50505050505050505050505050565b6000813b9050919050565b60006120dc612f04565b9050919050565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480612153575060006121516000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff166120c7565b145b156121645761216260006120d2565b505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156121e957600080fd5b505af11580156121fd573d6000803e3d6000fd5b505050506040513d602081101561221357600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561237b576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156122ff57600080fd5b505af1158015612313573d6000803e3d6000fd5b505050506040513d602081101561232957600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561242557808201518184015260208101905061240a565b50505050905090810190601f1680156124525780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b15801561247157600080fd5b505af1158015612485573d6000803e3d6000fd5b505050506040513d602081101561249b57600080fd5b81019080805190602001909291905050509050919050565b60606000806060600080861415612501576040805190810160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509450612601565b8593505b60008414151561252b578280600101935050600a8481151561252357fe5b049350612505565b826040519080825280601f01601f19166020018201604052801561255e5781602001602082028038833980820191505090505b5091506001830390505b6000861415156125fd57600a8681151561257e57fe5b066030017f0100000000000000000000000000000000000000000000000000000000000000028282806001900393508151811015156125b957fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a868115156125f557fe5b049550612568565b8194505b50505050919050565b60606126498383602060405190810160405280600081525060206040519081016040528060008152506020604051908101604052806000815250613393565b905092915050565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806126c3575060006126c16000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff166120c7565b145b156126d4576126d260006120d2565b505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561275957600080fd5b505af115801561276d573d6000803e3d6000fd5b505050506040513d602081101561278357600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156128eb576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561286f57600080fd5b505af1158015612883573d6000803e3d6000fd5b505050506040513d602081101561289957600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889856040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561299557808201518184015260208101905061297a565b50505050905090810190601f1680156129c25780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b1580156129e157600080fd5b505af11580156129f5573d6000803e3d6000fd5b505050506040513d6020811015612a0b57600080fd5b8101908080519060200190929190505050905062030d403a02670de0b6b3a764000001811115612a415760006001029150612beb565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663adf59f99828787876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b83811015612af8578082015181840152602081019050612add565b50505050905090810190601f168015612b255780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b83811015612b5e578082015181840152602081019050612b43565b50505050905090810190601f168015612b8b5780820380516001836020036101000a031916815260200191505b50955050505050506020604051808303818588803b158015612bac57600080fd5b505af1158015612bc0573d6000803e3d6000fd5b50505050506040513d6020811015612bd757600080fd5b810190808051906020019092919050505091505b509392505050565b6000606060008060008693506000925060009150600090505b8351811015612ec85760307f0100000000000000000000000000000000000000000000000000000000000000028482815181101515612c4757fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191610158015612d5f575060397f0100000000000000000000000000000000000000000000000000000000000000028482815181101515612cef57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191611155b15612e10578115612d82576000861415612d7857612ec8565b8580600190039650505b600a8302925060308482815181101515612d9857fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f010000000000000000000000000000000000000000000000000000000000000090040383019250612ebb565b602e7f0100000000000000000000000000000000000000000000000000000000000000028482815181101515612e4257fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415612eba57600191505b5b8080600101915050612c0c565b6000861115612eda5785600a0a830292505b8294505050505092915050565b6000818311612ef857828203612efc565b8183035b905092915050565b600080612f24731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed6120c7565b1115612fc557731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612fbc6040805190810160405280600b81526020017f6574685f6d61696e6e65740000000000000000000000000000000000000000008152506137a8565b60019050613390565b6000612fe473c03a2615d5efaf5f49f60b7bb6583eaec212fdf16120c7565b11156130855773c03a2615d5efaf5f49f60b7bb6583eaec212fdf16000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061307c6040805190810160405280600c81526020017f6574685f726f707374656e3300000000000000000000000000000000000000008152506137a8565b60019050613390565b60006130a473b7a07bcf2ba2f2703b24c0691b5278999c59ac7e6120c7565b11156131455773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061313c6040805190810160405280600981526020017f6574685f6b6f76616e00000000000000000000000000000000000000000000008152506137a8565b60019050613390565b600061316473146500cfd35b22e4a392fe0adc06de1a1368ed486120c7565b11156132055773146500cfd35b22e4a392fe0adc06de1a1368ed486000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506131fc6040805190810160405280600b81526020017f6574685f72696e6b6562790000000000000000000000000000000000000000008152506137a8565b60019050613390565b6000613224736f485c8bf6fc43ea212e93bbf8ce046c7f1cb4756120c7565b111561328757736f485c8bf6fc43ea212e93bbf8ce046c7f1cb4756000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050613390565b60006132a67320e12a1f859b3feae5fb2a0a32c18f5a65555bbf6120c7565b1115613309577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050613390565b60006133287351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa6120c7565b111561338b577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050613390565b600090505b90565b6060806060806060806060806000808e98508d97508c96508b95508a94508451865188518a518c51010101016040519080825280601f01601f1916602001820160405280156133f15781602001602082028038833980820191505090505b50935083925060009150600090505b88518110156134b357888181518110151561341757fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002838380600101945081518110151561347657fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613400565b600090505b875181101561356b5787818151811015156134cf57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002838380600101945081518110151561352e57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506134b8565b600090505b865181101561362357868181518110151561358757fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f01000000000000000000000000000000000000000000000000000000000000000283838060010194508151811015156135e657fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613570565b600090505b85518110156136db57858181518110151561363f57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002838380600101945081518110151561369e57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613628565b600090505b84518110156137935784818151811015156136f757fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002838380600101945081518110151561375657fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506136e0565b82995050505050505050505095945050505050565b80600290805190602001906137be9291906137c2565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061380357805160ff1916838001178555613831565b82800160010185558215613831579182015b82811115613830578251825591602001919060010190613815565b5b50905061383e9190613842565b5090565b61386491905b80821115613860576000816000905550600101613848565b5090565b905600a165627a7a72305820339a86ddbeb64b539c6b59dc94a4ffc45b90c17112b0e6bffe9fc8c4212704c00029',
                gas: '4700000'
            }, function (err, deployedContract) {
                if (!err) {
                    if (!deployedContract.address) {
                        console.log(deployedContract["transactionHash"]);
                        $('#addTickerModal').modal('hide');
                        $('#solidBetTransactionModal').modal({
                            keyboard: false,
                            show: true
                        });

                        $.ajax({
                            method: 'POST',
                            contentType: 'application/json',
                            url: base_url + '/v1/contracts/add',
                            data: JSON.stringify({
                                account: App.account,
                                type: +visibility_flag,
                                uuid: _currency,
                                category: 'crypto',
                                transactionHash: deployedContract["transactionHash"],
                                execution_time: new Date(__closure_delay).getTime() / 1000,
                                subscription_price: _subscriptionPrice
                            }),
                            success: function (data, textStatus, jqXHR) {
                                current_data = data;
                                if (data['success']) {
                                    let content = "";
                                    let link = `https://ropsten.etherscan.io/tx/${deployedContract["transactionHash"]}`;
                                    content += `Track your transaction by clicking <a href="${link}" target="_blank">here</a>`;
                                    $("#solidBetTransactionModalBody").html(content);
                                }
                            },
                            error: function (jqXHR, textStatus, errorThrown) {
                                console.log('Failed to post data.');
                            }
                        });
                    } else {
                        if (current_data['success']) {
                            $('#addTickerModal').modal('hide');
                            $('#solidBetTransactionModal').modal({
                                keyboard: false,
                                show: true
                            });
                            console.log(deployedContract.address);
                            let deployed_contract_content = "";
                            let link = `https://ropsten.etherscan.io/address/${deployedContract["address"]}`;
                            let local_link = `./contracts/${_currency}/${current_data['result'][0]}`;
                            let currency_name = App.tickers_data[_currency]['name'];
                            deployed_contract_content += `Successfully created and deployed contract for currency: ${currency_name}.<br/>`;
                            deployed_contract_content += `Check your contract on the ropsten network <a href="${link}" target="_blank">here</a><br/>`;
                            deployed_contract_content += `Check your deployed contract bet by clicking <a href="${local_link}" target="_blank">here</a><br/>`;
                            $("#solidBetTransactionModalBody").html(deployed_contract_content);
                        }
                    }
                } else {
                    console.log(err);
                }
            });
    },

    getMatches: function () {
        return new Promise((resolve, reject) => {
            $.ajax({
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded'
                },
                method: 'GET',
                url: base_url + '/v1/matches',
                success: function (data, textStatus, jqXHR) {
                    return resolve(data);
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    return reject(errorThrown);
                }
            });
        });
    },

    displayMatches: async () => {
        let c_length = await App.getContractsLength('sports');
        let data = await App.getMatches();
        App.matches = data;
        if (data && data.length > 0) {
            data.forEach(match => {
                let disabled = typeof c_length[match['id']] === 'undefined' ? 'disabled' : '';
                let timestamp = new Date(match["utcDate"]).getTime();
                App.matches[match.id] = match;
                let content = `<tr>`;
                content += `<td>${match["id"]} - ${match["league"]}</td>`;
                content += `<td>${match["homeTeam"]["name"]} vs ${match["awayTeam"]["name"]}</td>`;
                content += `<td style="word-wrap: break-word">${formatTime(timestamp)}</td>`;
                content += `<td><a href="${base_url}/matches/${match["id"]}" target="_blank"><button type="button" class="btn btn-primary">View</button></a></td>`;
                content += `<td><a href="${base_url}/contracts/${match["id"]}" target="_blank"><button type="button" class="btn btn-primary" ${disabled}>View</button></a></td>`;
                content += `<td><button type="button" class="btn btn-primary" data-toggle="modal" data-target="#addMatchModal" onclick="App.matchId=${match['id']}">Create</button></td>`;
                content += ` < /tr>`;
                $("#upcoming_matches_table").prepend(content);
            });
        }
    },

    getTickers: function () {
        return new Promise((resolve, reject) => {
            $.ajax({
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded'
                },
                method: 'GET',
                url: base_url + '/v1/crypto/tickers',
                success: function (data, textStatus, jqXHR) {
                    return resolve(data);
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    return reject(errorThrown);
                }
            });
        });
    },

    displayTickers: async function () {
        let c_length = await App.getContractsLength('crypto');
        let data = await App.getTickers();
        // console.log(c_length)
        data.forEach(ticker => {
            let disabled = typeof c_length[ticker['id']] === 'undefined' ? 'disabled' : '';
            let t = `<tr>`;
            t += `<td>${ticker['rank']}</td>`;
            t += `<td><a href="https://coinmarketcap.com/currencies/${ticker['name']}/" target="_blank"><img src="https://s2.coinmarketcap.com/static/img/coins/32x32/${ticker['id']}.png"/></a> ${ticker['name']}</td>`;
            t += `<td><a href="${base_url}/contracts/${ticker['id']}" target="_blank"><button type="button" class="btn btn-primary" ${disabled}>View contracts</button></a></td>`;
            t += `<td><button type="button" class="btn btn-primary" data-toggle="modal" data-target="#addTickerModal" onclick="App.currencyId=${ticker['id']}">
                        Create Bet
                    </button></td>`;
            t += `</tr>`;
            $("#tickets_table").append(t);
        });
    },

    getContractsLength: function (category) {
        return new Promise((resolve, reject) => {
            $.ajax({
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded'
                },
                method: 'POST',
                contentType: 'application/json',
                url: base_url + '/v1/contracts/length',
                data: {
                    account: App.account,
                    category: category
                },
                success: function (data, textStatus, jqXHR) {
                    return resolve(data);
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    return reject(errorThrown);
                }
            });
        });
    },

    getMatchDetails: function (match_id) {
        $.ajax({
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded'
            },
            method: 'GET',
            url: `${base_url}/v1/matches/${match_id}`,
            success: function (data, textStatus, jqXHR) {
                let content = "";
                content += `<b>League</b>: ${data['league']}<br/>`;
                content += `<b>Time</b>: ${formatTime(data['timestamp'] * 1000)}<br/>`;
                content += `<b>Countdown</b>: <span id="match_details_countdown_${match_id}"></span><br/>`;
                content += `<b>Status</b>: ${data['status']}<br/>`;
                content += `<b>Team one</b>: ${data['teamOne']['name']}<br/>`;
                content += `<b>Team two</b>: ${data['teamTwo']['name']}<br/>`;
                content += `<b>Team one score</b>: ${data['teamOne']['score']}<br/>`;
                content += `<b>Team two score</b>: ${data['teamTwo']['score']}<br/>`;
                content += `<b>Raw score</b>: ${data['raw']}<br/>`;
                content += `<b>Contracts</b>: <a href="${base_url}/contracts/${match_id}" target="_blank">here</a><br/>`;
                $("#match_details").html(content);                // Set the date we're counting down to
                var countDownDate = new Date(data['timestamp'] * 1000).getTime();

                var x = setInterval(function () {

                    var now = new Date().getTime();

                    var distance = countDownDate - now;

                    var weeks = Math.floor(distance / (1000 * 60 * 60 * 24 * 7));
                    var days = Math.floor(distance / (1000 * 60 * 60 * 24)) % 7;
                    var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
                    var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
                    var seconds = Math.floor((distance % (1000 * 60)) / 1000);

                    document.getElementById(`match_details_countdown_${match_id}`).innerHTML = `${weeks} weeks ${days} d ${hours} hr ${minutes} mins ${seconds} secs`;

                    // If the count down is over, write some text
                    if (distance < 0) {
                        clearInterval(x);
                        document.getElementById(`match_details_countdown_${match_id}`).innerHTML = "ENDED";
                    }
                }, 1000);
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.log(errorThrown);
            }
        });
    },

    getContracts: function (uuid) {
        $.ajax({
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded'
            },
            method: 'POST',
            contentType: 'application/json',
            url: base_url + '/v1/contracts/mine',
            data: {
                account: App.account,
                uuid: uuid
            },
            success: function (data, textStatus, jqXHR) {
                data.forEach(contract => {
                    let category = contract['category'];
                    let type = contract['type'] === 1 ? 'public' : 'private';
                    let content = "";
                    content += `<tr>`;
                    content += `<td>${contract['uuid']}</td>`;
                    content += `<td>${contract['id']}</td>`;
                    content += `<td>${type}</td>`;
                    content += `<td>${formatTime(contract['time'] * 1000)}</td>`;
                    content += `<td>${formatTime(contract['execution_time'] * 1000)}</td>`;
                    content += `<td><a href="https://ropsten.etherscan.io/tx/${contract['transactionHash']}" target="_blank">here</a></td>`;
                    content += `<td><a href="${base_url}/contracts/${uuid}/${contract['id']}" target="_blank">here</a></td>`;
                    content += `</tr>`;
                    $("#contracts").prepend(content);
                });
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.log(errorThrown);
            }
        });
    },

    getContract: function (uuid, betId) {
        return new Promise((resolve, reject) => {
            $.ajax({
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded'
                },
                method: 'POST',
                contentType: 'application/json',
                url: base_url + '/v1/contracts/fetch',
                data: {
                    account: App.account,
                    uuid: uuid,
                    id: betId
                },
                success: function (_data, textStatus, jqXHR) {
                    if (_data.length === 1) {
                        return resolve(_data[0]);
                    } else {
                        return reject("")
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    return reject(errorThrown);
                }
            });
        });
    },

    displayContract: async (uuid, betId) => {
        let data = await App.getContract(uuid, betId);
        // console.log(data)
        if (data['status']) {
            if (data['category'] === 'sports') {
                /**
                 * Match
                 */
                let MatchContract = web3.eth.contract(App.SOLID_SPORT_BET_ABI);
                App.MatchInstance = MatchContract.at(data['contractAddress']);
                let states = ['PENDING', "SUCCESS"];
                App.MatchInstance.details(function (err, res) {
                    if (!err) {
                        App.MatchInstancePrice = res[6].valueOf();
                        let _matchId = res[0];
                        let _league = web3.toAscii(res[1]);
                        let _teamOne = web3.toAscii(res[2]);
                        let _teamTwo = web3.toAscii(res[3]);
                        let _matchTimestamp = (res[4]).valueOf() * 1000;
                        let _executionDelay = (res[5]).valueOf() * 1000;
                        App.execution_time = res[5].valueOf();
                        let _price = (res[6]).valueOf() / 1e18;
                        let _status = res[7];
                        let content = "";
                        content += `<b>Contract address</b>: <a href="https://ropsten.etherscan.io/address/${data['contractAddress']}" target="_blank">${data['contractAddress']}</a><br/>`;
                        content += `<b>Match #</b>: ${_matchId}<br/>`;
                        content += `<b>Bet #</b>: ${betId}<br/>`;
                        content += `<b>League</b>: ${_league}<br/>`;
                        content += `<b>Team one</b>: ${_teamOne}<br/>`;
                        content += `<b>Team two</b>: ${_teamTwo}<br/>`;
                        content += `<b>Time</b>: ${formatTime(_matchTimestamp)}<br/>`;
                        content += `<b>Execution delay</b>: ${formatTime(_executionDelay)}<br/>`;
                        content += `<b>Price</b>: ${_price} ETH <br/>`;
                        content += `<b>Status</b>: ${states[_status]}<br/>`;
                        $("#bet_details").html(content);
                    }
                });

                let MATCH_SUBS = App.MatchInstance.newSubscriber({
                    // address: App.account
                }, {
                    fromBlock: 0,
                    toBlock: 'latest',
                });

                MATCH_SUBS.watch(function (error, event) {
                    if (!error) {
                        let result = event['args'];
                        let content = `<tr>`;
                        content += `<td>${result['addr']}</td>`;
                        content += `<td>${result['scoreOne']}</td>`;
                        content += `<td>${result['scoreTwo']}</td>`;
                        content += `</tr>`;
                        $("#bet_subscribers").prepend(content)
                        // console.log(event);
                    }
                });

                let MATCH_WIN_RESULT = App.MatchInstance.betResolved({
                    // address: App.account
                }, {
                    fromBlock: 0,
                    toBlock: 'latest',
                });

                MATCH_WIN_RESULT.watch(function (error, event) {
                    if (!error) {
                        let result = event['args'];
                        let scoreOne = result['scoreOne'].valueOf();
                        let scoreTwo = result['scoreTwo'].valueOf();
                        let content = ``;
                        content += `<b>Score one</b>: ${scoreOne}<br/>`;
                        content += `<b>Score two</b>: ${scoreTwo}`;
                        $("#result_details").html(content)
                    }
                });

            } else {
                /**
                 * Crypto contract details
                 */

                let CryptoContract = web3.eth.contract(App.SOLID_CRYPTO_BET_ABI);
                App.CryptoInstance = CryptoContract.at(data['contractAddress']);
                // console.log(App.CryptoInstance)
                /**
                 * OPENED, PENDING, EXECUTED, ERROR
                 */

                let states = ['OPENED', 'PENDING', 'EXECUTED', 'ERROR'];
                $("#contractAddress").html(`<a href="https://ropsten.etherscan.io/address/${data['contractAddress']}" target="_blank">${data['contractAddress']}</a>`);
                App.CryptoInstance.currency(function (err, res) {
                    $("#currency").html(App.tickers_data[res.valueOf()]['name']);
                });

                App.CryptoInstance.creationTime(function (err, res) {
                    $("#creationTime").html(formatTime(res.valueOf() * 1000));
                });

                App.CryptoInstance.closureDelay(function (err, res) {
                    $("#closureDelay").html(formatHours(res.valueOf()));
                });

                App.CryptoInstance.executionDelay(function (err, res) {
                    $("#executionDelay").html(formatHours(res.valueOf()));
                    App.execution_time = res.valueOf();
                });

                App.CryptoInstance.subscriptionPrice(function (err, res) {
                    $("#subscriptionPrice").html((res.valueOf() / 1e18) + " ETH");
                    App.CryptoInstancePrice = res.valueOf();
                });

                App.CryptoInstance.status(function (err, res) {
                    $("#status").html(states[res.valueOf()]);
                });

                App.CryptoInstance.winGuess.call(function (err, res) {
                    if (res.valueOf() == 0) {
                        $("#winGuess").html('-');
                    } else {
                        $("#winGuess").html(res.valueOf());
                    }
                });

                App.CryptoInstance.winReward.call(function (err, res) {
                    if (res.valueOf() == 0) {
                        $("#winReward").html('-');
                    } else {
                        $("#winReward").html(res.valueOf() / 1e18);
                    }
                });

                App.CryptoInstance.result.call(function (err, res) {
                    $("#winResult").html(res);
                });

                let CRYPTO_SUBS = App.CryptoInstance.newSubscriber({
                    // address: App.account
                }, {
                    fromBlock: 0,
                    toBlock: 'latest',
                });

                CRYPTO_SUBS.watch(function (error, event) {
                    if (!error) {
                        let result = event['args'];
                        let content = `<tr>`;
                        content += `<td>${result['addr']}</td>`;
                        content += `<td>${(result['guess'] / 1e2).toFixed(2)}</td>`;
                        content += `</tr>`;
                        $("#bet_subscribers").prepend(content)
                    }
                });


                let CRYPTO_WIN_RESULT = App.CryptoInstance.newWinner({
                    // address: App.account
                }, {
                    fromBlock: 0,
                    toBlock: 'latest',
                });

                CRYPTO_WIN_RESULT.watch(function (error, event) {
                    if (!error) {
                        let result = event['args'];
                        let reward = (result['reward']).valueOf() / 1e18;
                        let content = `<tr>`;
                        content += `<td>${result['addr']}</td>`;
                        content += `<td>${reward}</td>`;
                        content += `</tr>`;
                        $("#winners").prepend(content)
                    }
                });
            }
        }
        console.log(`Successfully loaded uuid: ${uuid} - betId: ${betId}`)
    },

    subscribeMatchContract: function () {
        let inputTeamScoreOne = $("#inputTeamScoreOne").val();
        let inputTeamScoreTwo = $("#inputTeamScoreTwo").val();
        App.MatchInstance.subscribe(inputTeamScoreOne, inputTeamScoreTwo, {
            value: App.MatchInstancePrice,
            from: App.account
        }, function (err, res) {
            if (err) {
                console.log(err);
            } else {
                $.ajax({
                    method: 'POST',
                    contentType: 'application/json',
                    url: base_url + '/v1/bets/add',
                    data: JSON.stringify({
                        id: App.betId,
                        category: 'matches',
                        account: App.account,
                        transactionHash: res,
                        contractAddress: App.MatchInstance.address,
                        execution_time: App.execution_time
                    }),
                    success: function (data, textStatus, jqXHR) {
                        let content = "";
                        let link = `https://ropsten.etherscan.io/tx/${res}`;
                        content += `Successfully subscribed for match: ${+App.matchId}<br/>`;
                        content += `Track your transaction on the ropsten network by clicking <a href="${link}" target="_blank">here</a>`
                        $("#solidBetTransactionModalBody").html(content);
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        console.log('Failed to post data.');
                    }
                });
            }
        });
    },

    subscribeCryptoContract: function () {
        let guess_input = $("#guess_input").val();
        App.CryptoInstance.subscribe(guess_input * 1e2, {
            value: App.CryptoInstancePrice,
            from: App.account
        }, function (err, res) {
            if (err) {
                console.log(err);
            } else {
                $.ajax({
                    method: 'POST',
                    contentType: 'application/json',
                    url: base_url + '/v1/bets/add',
                    data: JSON.stringify({
                        id: App.betId,
                        category: 'crypto',
                        account: App.account,
                        transactionHash: res,
                        contractAddress: App.CryptoInstance.address,
                        execution_time: App.execution_time
                    }),
                    success: function (data, textStatus, jqXHR) {
                        let content = "";
                        let link = `https://ropsten.etherscan.io/tx/${res}`;
                        content += `Successfully subscribed for match: ${+App.uuid}<br/>`;
                        content += `Track your transaction on the ropsten network by clicking <a href="${link}" target="_blank">here</a>`
                        $("#solidBetTransactionModalBody").html(content);
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        console.log('Failed to post data.');
                    }
                });
            }
        });
    },

    showBets: async (category) => {
        // console.log(category)
        let public_bets = await App.getBets(category, 'public');
        let private_bets = await App.getBets(category, 'private');
        console.log(public_bets);
        console.log(private_bets);
        let data = public_bets.concat(private_bets);
        if (data && data.length > 0) {
            for (let i = 0; i < data.length; i++) {
                let contract = data[i];
                let type = contract['type'] === 1 ? 'public' : 'private';
                // let category = contract['category'];
                let content = "";
                content += `<tr>`;
                content += `<td>${(i + 1)}</td>`;
                if (category === 'crypto') {
                    if (typeof App.tickers_data[contract['uuid']] !== 'undefined') {
                        content += `<td>${App.tickers_data[contract['uuid']]['name']}</td>`;
                    } else {
                        content += `<td>-</td>`;
                    }
                }
                content += `<td>${contract['subscription_price'] / 1e18} ETH</td>`;
                content += `<td>${type}</td>`;
                if (category === 'sports') {
                    content += `<td>${App['matches'][contract['uuid']]['league']}</td>`;
                    content += `<td>${App['matches'][contract['uuid']]['homeTeam']['name']} vs ${App['matches'][contract['uuid']]['awayTeam']['name']}</td>`;
                }
                content += `<td>${formatTime(contract['execution_time'] * 1000)}</td>`;

                let bet_id = type === 'public' ? 'id' : 'betId';
                content += `<td><a href="${base_url}/contracts/${contract['uuid']}/${contract[bet_id]}" target="_blank"><button type="button" class="btn btn-primary">Open</button></a></td>`;
                content += `</tr>`;
                $("#bets").append(content);
            }
        }
    },

    getBets: async (category, type) => {
        return new Promise((resolve, reject) => {
            $.ajax({
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded'
                },
                method: 'POST',
                contentType: 'application/json',
                url: base_url + `/v1/contracts/${type}`,
                data: {
                    account: App.account,
                    category: category
                },
                success: function (data, textStatus, jqXHR) {
                    return resolve(data);
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    return reject(errorThrown);
                }
            });
        });
    },

    getInactiveBets: function () {
        $("#bets").html("");
        $.ajax({
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded'
            },
            method: 'POST',
            contentType: 'application/json',
            url: base_url + '/v1/contracts/inactive/all',
            data: {
                account: App.account
            },
            success: function (data, textStatus, jqXHR) {
                if (data && data.length > 0) {
                    data.forEach(contract => {
                        let type = contract['type'] === 1 ? 'public' : 'private';
                        // let category = contract['category'];
                        let content = "";
                        content += `<tr>`;
                        content += `<td>${contract['id']}</td>`;
                        content += `<td>${type}</td>`;
                        content += `<td>${contract['category']}</td>`;
                        content += `<td>contract</td>`;
                        content += `<td>${formatTime(contract['execution_time'] * 1000)}</td>`;
                        content += `<td><a href="${base_url}/contracts/${contract['uuid']}/${contract['id']}" target="_blank">here</a></td>`;
                        content += `</tr>`;
                        $("#bets").prepend(content);
                    });
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.log(errorThrown);
            }
        });


        $.ajax({
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded'
            },
            method: 'POST',
            contentType: 'application/json',
            url: base_url + '/v1/bets/inactive/all',
            data: {
                account: App.account
            },
            success: function (data, textStatus, jqXHR) {
                if (data && data.length > 0) {
                    data.forEach(contract => {
                        let type = contract['type'] === 1 ? 'public' : 'private';
                        let content = "";
                        content += `<tr>`;
                        content += `<td>${contract['betId']}</td>`;
                        content += `<td>${type}</td>`;
                        content += `<td>${contract['category']}</td>`;
                        content += `<td>subscription</td>`;
                        content += `<td>${formatTime(contract['execution_time'] * 1000)}</td>`;
                        content += `<td><a href="${base_url}/contracts/${contract['uuid']}/${contract['betId']}" target="_blank">here</a></td>`;
                        content += `</tr>`;
                        $("#bets").prepend(content);
                    });
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.log(errorThrown);
            }
        });
    },

    getOwnedInactiveBets: function () {
        $("#bets").html("");
        $.ajax({
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded'
            },
            method: 'POST',
            contentType: 'application/json',
            url: base_url + '/v1/contracts/inactive/mine',
            data: {
                account: App.account
            },
            success: function (data, textStatus, jqXHR) {
                if (data && data.length > 0) {
                    data.forEach(contract => {
                        let type = contract['type'] === 1 ? 'public' : 'private';
                        // let category = contract['category'];
                        let content = "";
                        content += `<tr>`;
                        content += `<td>${contract['id']}</td>`;
                        content += `<td>${type}</td>`;
                        content += `<td>${contract['category']}</td>`;
                        content += `<td>contract</td>`;
                        content += `<td>${formatTime(contract['execution_time'] * 1000)}</td>`;
                        content += `<td><a href="${base_url}/contracts/${contract['uuid']}/${contract['id']}" target="_blank">here</a></td>`;
                        content += `</tr>`;
                        $("#bets").prepend(content);
                    });
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.log(errorThrown);
            }
        });


        $.ajax({
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded'
            },
            method: 'POST',
            contentType: 'application/json',
            url: base_url + '/v1/bets/inactive/mine',
            data: {
                account: App.account
            },
            success: function (data, textStatus, jqXHR) {
                if (data && data.length > 0) {
                    data.forEach(contract => {
                        let type = contract['type'] === 1 ? 'public' : 'private';
                        let content = "";
                        content += `<tr>`;
                        content += `<td>${contract['betId']}</td>`;
                        content += `<td>${type}</td>`;
                        content += `<td>${contract['category']}</td>`;
                        content += `<td>subscription</td>`;
                        content += `<td>${formatTime(contract['execution_time'] * 1000)}</td>`;
                        content += `<td><a href="${base_url}/contracts/${contract['uuid']}/${contract['betId']}" target="_blank">here</a></td>`;
                        content += `</tr>`;
                        $("#bets").prepend(content);
                    });
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.log(errorThrown);
            }
        });
    },

    load: async () => {
        App.account = await App.getAccount();
        console.log("Successfully loaded web3 and all related data.");
    },

    getTickersData: async () => {
        let _data = await $.getJSON(`${base_url}/ticker.json`);
        App.tickers_data = _data['data'];
        console.log("Successfully loaded tickers data.");
    },

    getABIs: async () => {
        let sports = await $.getJSON(`${base_url}/sports.json`);
        let crypto = await $.getJSON(`${base_url}/crypto.json`);
        App.SOLID_SPORT_BET_ABI = sports['abi'];
        App.SOLID_CRYPTO_BET_ABI = crypto['abi'];
        console.log("Successfully loaded ABIs.");
    },

    getHistory: async () => {
        let history_flag = $('#history_flag option:selected').val();
        if (history_flag == 1) {
            await App.getInactiveBets();
        } else {
            await App.getOwnedInactiveBets()
        }
    }
}

function toHex(s) {
    var hex = '';
    for (var i = 0; i < s.length; i++) {
        hex += '' + s.charCodeAt(i).toString(16);
    }
    return `0x${hex}`;
}

function waitSeconds(seconds) {
    return new Promise((resolve, reject) => {
        setTimeout(() => {
            resolve();
        }, seconds * 1000);
    });
}

function dateToSeconds(current_date) {
    return Math.floor(new Date(current_date).getTime() / 1000);
}

$('#solidBetTransactionModal').on('hidden.bs.modal', function (e) {
    $('#solidBetTransactionModalBody').html('');
});

$('#addTickerModal').on('hidden.bs.modal', function (e) {
    App.currencyId = null;
});

$('#addMatchModal').on('hidden.bs.modal', function (e) {
    App.matchId = null;
});

onload = async () => {
    await App.getABIs();
    await App.getTickersData();
    await App.initWeb3();
    await App.load();

    $(document).on('click', '#subscribe_sports_button', App.subscribeMatchContract);
    $(document).on('click', '#subscribe_crypto_button', App.subscribeCryptoContract);
    $(document).on('click', '#add_ticker_button', App.createCryptoBetContract);
    $(document).on('click', '#add_sports_button', App.createMatchesBetContract);
    $(document).on('click', '#fetch_bets_button', App.getBets);
    $(document).on('click', '#display_history_button', App.getHistory);

    $("#crypto").height($(window).height());
    $("#sports").height($(window).height());
    let pathname = window.location.pathname;
    let link = window.location.href;
    // console.log(link)
    let splitted = link.replace(base_url, "");
    // console.log(pathname);
    // console.log(window.location.href);
    splitted = splitted.split("/");
    // console.log(splitted)
    if (splitted.length === 2 && splitted[1] === 'matches') {
        await App.displayMatches();
        await App.showBets('sports')
    }

    if (splitted.length === 2 && splitted[1] === 'crypto') {
        await App.displayTickers();
        await App.showBets('crypto');
        // console.log(formatTimeInput(new Date()))
        let current_date = new Date();

        let closure_ms = 60 * 60 * 1 * 1000;
        let closure_timestamp = current_date.getTime() + closure_ms;
        let closure_date = new Date(closure_timestamp);

        let execution_ms = 60 * 60 * 2 * 1000;
        let execution_timestamp = closure_timestamp + execution_ms;
        let execution_date = new Date(execution_timestamp);

        $("#closure_delay").val(formatTimeInput(closure_date));
        $("#execution_delay").val(formatTimeInput(execution_date));
    }

    if (splitted.length === 2 && splitted[1] === 'history') {
        // App.getInactiveBets();
        // App.getOwnedInactiveBets();
    }

    if (splitted.length === 3 && splitted[1] === 'contracts' && !isNaN(+splitted[2])) {
        await App.getContracts(+splitted[2]);
    }

    if (splitted.length === 3 && splitted[1] === 'matches' && !isNaN(+splitted[2])) {
        await App.getMatchDetails(+splitted[2]);
    }

    if (splitted.length === 4 && splitted[1] === 'contracts' && !isNaN(+splitted[2])) {
        await App.displayContract(+splitted[2], splitted[3]);
        App.uuid = +splitted[2];
        App.betId = splitted[3];
    }
};

function openPage(path) {
    window.location.replace(`${base_url}/${path}`);
}

function formatTime(_timestamp) {
    let current_date = new Date(_timestamp);
    return `${current_date.getUTCDate()}-${current_date.getUTCMonth() + 1}-${current_date.getFullYear()} ${current_date.toLocaleTimeString()}`;
}


function formatTimeInput(_timestamp) {
    let current_date = new Date(_timestamp);
    return `${current_date.getFullYear()}-${current_date.getUTCMonth() + 1}-${current_date.getUTCDate()}T${fixTwo(current_date.getHours())}:${fixTwo(current_date.getUTCMinutes())}`;
}

function fixTwo(number) {
    if (number < 10) {
        return '0' + number;
    } else {
        return number;
    }
}


function formatHours(_timestamp) {
    let hours = _timestamp / (60 * 60);
    return `${hours.toFixed(2)} h`;
}