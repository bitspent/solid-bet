let base_url = "";
let SOLID_SPORT_BET_ABI = [
    {
        "constant": false,
        "inputs": [
            {
                "name": "myid",
                "type": "bytes32"
            },
            {
                "name": "res",
                "type": "string"
            }
        ],
        "name": "__callback",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "constant": false,
        "inputs": [
            {
                "name": "myid",
                "type": "bytes32"
            },
            {
                "name": "result",
                "type": "string"
            },
            {
                "name": "proof",
                "type": "bytes"
            }
        ],
        "name": "__callback",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "constant": false,
        "inputs": [
            {
                "name": "_owner",
                "type": "address"
            }
        ],
        "name": "transferOwner",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "constant": true,
        "inputs": [],
        "name": "details",
        "outputs": [
            {
                "name": "_matchId",
                "type": "uint256"
            },
            {
                "name": "_league",
                "type": "bytes32"
            },
            {
                "name": "_teamOne",
                "type": "bytes32"
            },
            {
                "name": "_teamTwo",
                "type": "bytes32"
            },
            {
                "name": "_matchTimestamp",
                "type": "uint256"
            },
            {
                "name": "_executionDelay",
                "type": "uint256"
            },
            {
                "name": "_price",
                "type": "uint256"
            },
            {
                "name": "_status",
                "type": "uint256"
            }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
    },
    {
        "constant": false,
        "inputs": [
            {
                "name": "scoreOne",
                "type": "uint256"
            },
            {
                "name": "scoreTwo",
                "type": "uint256"
            }
        ],
        "name": "subscribe",
        "outputs": [],
        "payable": true,
        "stateMutability": "payable",
        "type": "function"
    },
    {
        "constant": true,
        "inputs": [],
        "name": "matchResult",
        "outputs": [
            {
                "name": "scoreOne",
                "type": "uint256"
            },
            {
                "name": "scoreTwo",
                "type": "uint256"
            }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [
            {
                "name": "_matchId",
                "type": "uint256"
            },
            {
                "name": "_league",
                "type": "bytes32"
            },
            {
                "name": "_teamOne",
                "type": "bytes32"
            },
            {
                "name": "_teamTwo",
                "type": "bytes32"
            },
            {
                "name": "_matchTimestamp",
                "type": "uint256"
            },
            {
                "name": "_executionDelay",
                "type": "uint256"
            },
            {
                "name": "_price",
                "type": "uint256"
            }
        ],
        "payable": true,
        "stateMutability": "payable",
        "type": "constructor"
    },
    {
        "anonymous": false,
        "inputs": [
            {
                "indexed": false,
                "name": "result",
                "type": "string"
            }
        ],
        "name": "OraclizeLog",
        "type": "event"
    },
    {
        "anonymous": false,
        "inputs": [
            {
                "indexed": true,
                "name": "addr",
                "type": "address"
            },
            {
                "indexed": false,
                "name": "scoreOne",
                "type": "uint256"
            },
            {
                "indexed": false,
                "name": "scoreTwo",
                "type": "uint256"
            }
        ],
        "name": "newSubscriber",
        "type": "event"
    },
    {
        "anonymous": false,
        "inputs": [
            {
                "indexed": false,
                "name": "scoreOne",
                "type": "uint256"
            },
            {
                "indexed": false,
                "name": "scoreTwo",
                "type": "uint256"
            }
        ],
        "name": "betResolved",
        "type": "event"
    }
];
let SOLID_CRYPTO_BET_ABI = [
    {
        "constant": false,
        "inputs": [
            {
                "name": "guess",
                "type": "uint256"
            }
        ],
        "name": "subscribe",
        "outputs": [
            {
                "name": "",
                "type": "uint256"
            }
        ],
        "payable": true,
        "stateMutability": "payable",
        "type": "function"
    },
    {
        "constant": true,
        "inputs": [],
        "name": "status",
        "outputs": [
            {
                "name": "",
                "type": "uint8"
            }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
    },
    {
        "constant": false,
        "inputs": [
            {
                "name": "myid",
                "type": "bytes32"
            },
            {
                "name": "res",
                "type": "string"
            }
        ],
        "name": "__callback",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "constant": false,
        "inputs": [
            {
                "name": "myid",
                "type": "bytes32"
            },
            {
                "name": "result",
                "type": "string"
            },
            {
                "name": "proof",
                "type": "bytes"
            }
        ],
        "name": "__callback",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "constant": false,
        "inputs": [],
        "name": "unpause",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "constant": true,
        "inputs": [],
        "name": "closureDelay",
        "outputs": [
            {
                "name": "",
                "type": "uint256"
            }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
    },
    {
        "constant": true,
        "inputs": [
            {
                "name": "",
                "type": "address"
            }
        ],
        "name": "guesses",
        "outputs": [
            {
                "name": "",
                "type": "uint256"
            }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
    },
    {
        "constant": false,
        "inputs": [],
        "name": "recallOraclize",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "constant": true,
        "inputs": [
            {
                "name": "",
                "type": "uint256"
            }
        ],
        "name": "subscribers",
        "outputs": [
            {
                "name": "",
                "type": "address"
            }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
    },
    {
        "constant": true,
        "inputs": [],
        "name": "paused",
        "outputs": [
            {
                "name": "",
                "type": "bool"
            }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
    },
    {
        "constant": true,
        "inputs": [],
        "name": "counter",
        "outputs": [
            {
                "name": "",
                "type": "uint256"
            }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
    },
    {
        "constant": true,
        "inputs": [],
        "name": "result",
        "outputs": [
            {
                "name": "",
                "type": "string"
            }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
    },
    {
        "constant": false,
        "inputs": [],
        "name": "pause",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "constant": true,
        "inputs": [],
        "name": "executionDelay",
        "outputs": [
            {
                "name": "",
                "type": "uint256"
            }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
    },
    {
        "constant": true,
        "inputs": [],
        "name": "owner",
        "outputs": [
            {
                "name": "",
                "type": "address"
            }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
    },
    {
        "constant": true,
        "inputs": [],
        "name": "winGuess",
        "outputs": [
            {
                "name": "",
                "type": "uint256"
            }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
    },
    {
        "constant": true,
        "inputs": [
            {
                "name": "",
                "type": "uint256"
            }
        ],
        "name": "winners",
        "outputs": [
            {
                "name": "",
                "type": "address"
            }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
    },
    {
        "constant": true,
        "inputs": [],
        "name": "subscriptionPrice",
        "outputs": [
            {
                "name": "",
                "type": "uint256"
            }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
    },
    {
        "constant": true,
        "inputs": [],
        "name": "winReward",
        "outputs": [
            {
                "name": "",
                "type": "uint256"
            }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
    },
    {
        "constant": true,
        "inputs": [],
        "name": "currency",
        "outputs": [
            {
                "name": "",
                "type": "uint256"
            }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
    },
    {
        "constant": false,
        "inputs": [],
        "name": "end",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "constant": false,
        "inputs": [
            {
                "name": "newOwner",
                "type": "address"
            }
        ],
        "name": "transferOwnership",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            {
                "name": "_creator",
                "type": "address"
            },
            {
                "name": "_currency",
                "type": "uint256"
            },
            {
                "name": "_closureDelay",
                "type": "uint256"
            },
            {
                "name": "_executionDelay",
                "type": "uint256"
            },
            {
                "name": "_subscriptionPrice",
                "type": "uint256"
            }
        ],
        "payable": true,
        "stateMutability": "payable",
        "type": "constructor"
    },
    {
        "anonymous": false,
        "inputs": [
            {
                "indexed": false,
                "name": "_old",
                "type": "uint8"
            },
            {
                "indexed": false,
                "name": "_new",
                "type": "uint8"
            }
        ],
        "name": "StateTranstition",
        "type": "event"
    },
    {
        "anonymous": false,
        "inputs": [],
        "name": "Pause",
        "type": "event"
    },
    {
        "anonymous": false,
        "inputs": [],
        "name": "Unpause",
        "type": "event"
    },
    {
        "anonymous": false,
        "inputs": [
            {
                "indexed": true,
                "name": "previousOwner",
                "type": "address"
            },
            {
                "indexed": true,
                "name": "newOwner",
                "type": "address"
            }
        ],
        "name": "OwnershipTransferred",
        "type": "event"
    }
];

App = {
    web3Provider: null,
    account: null,
    MatchInstance: null,
    MatchInstancePrice: null,

    CryptoInstance: null,
    CryptoInstancePrice: null,

    matches: {},
    currencyId: null,
    matchId: null,
    getAccount: function () {
        return new Promise((resolve, reject) => {
            web3.eth.getAccounts(function (error, accounts) {
                if (error) {
                    return reject(error);
                } else {
                    return resolve(accounts[0]);
                }
            });
        });
    },

    initWeb3: function () {
        return new Promise((resolve, reject) => {
            if (typeof web3 !== 'undefined') {
                App.web3Provider = web3.currentProvider;
            } else {
                App.web3Provider = new Web3.providers.HttpProvider('http://localhost:8545');
                alert("Please install Metamask before proceeding.");
                return;
            }
            web3 = new Web3(App.web3Provider);
            if (web3 == null || typeof web3 === 'undefined') {
                return reject("Something went wrong");
            } else {
                return resolve("Successfully connected to Web3 Provider.");
            }
        });
    },

    creatematchesBetContract: function () {
        let match = App.matches[+App.matchId];
        let price = $("#subscription_price").val();
        let visibility_flag = $('#visibility_flag option:selected').val();
        let _league = match["league"];
        let _teamOne = match["homeTeam"]["name"];
        let _teamTwo = match["awayTeam"]["name"];
        let _matchTimestamp = Math.floor(new Date(match["utcDate"]).getTime() / 1000);
        let _executionDelay = _matchTimestamp + (3 * 60 * 60);
        let _price = +price * 1e18;
        console.log(+App.matchId, _league, _teamOne, _teamTwo, _matchTimestamp, _executionDelay, _price);
        var SolidSportBet = web3.eth.contract(SOLID_SPORT_BET_ABI);
        var SolidSportBetInstance = SolidSportBet.new(+App.matchId, _league, _teamOne, _teamTwo, _matchTimestamp, _executionDelay, _price, {
                from: App.account,
                value: 0.01 * 1e18,
                data: '0x60806040526000600655600a60075560405160e0806200377c83398101806040528101908080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190505050662386f26fc1000034101515156200008457600080fd5b86600881905550856009816000191690555084600a816000191690555083600b816000191690555082600c8190555081600d8190555080600e8190555073908e009ea04508db32933f463dec7d1d60aaa93f600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200012f6200013c640100000000026401000000009004565b50505050505050620019eb565b6060806060620001906040805190810160405280600381526020017f55524c00000000000000000000000000000000000000000000000000000000008152506200037d640100000000026401000000009004565b3073ffffffffffffffffffffffffffffffffffffffff16311115156200021e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600a8152602001807f6e6f20617069206665650000000000000000000000000000000000000000000081525060200191505060405180910390fd5b606060405190810160405280602281526020017f68747470733a2f2f6170692e6b72796b61732e6265742f76312f6d617463686581526020017f732f0000000000000000000000000000000000000000000000000000000000008152509250620002996008546200077e640100000000026401000000009004565b9150620003226040805190810160405280600581526020017f6a736f6e2800000000000000000000000000000000000000000000000000000081525084846040805190810160405280600581526020017f292e726177000000000000000000000000000000000000000000000000000000815250620008e0640100000000026401000000009004565b905062000377600d546040805190810160405280600381526020017f55524c0000000000000000000000000000000000000000000000000000000000815250836200093b640100000000026401000000009004565b50505050565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480620003ff57506000620003fd6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1662000f19640100000000026401000000009004565b145b15620004225762000420600062000f24640100000000026401000000009004565b505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015620004a857600080fd5b505af1158015620004bd573d6000803e3d6000fd5b505050506040513d6020811015620004d457600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151562000640576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015620005c257600080fd5b505af1158015620005d7573d6000803e3d6000fd5b505050506040513d6020811015620005ee57600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b83811015620006ec578082015181840152602081019050620006cf565b50505050905090810190601f1680156200071a5780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b1580156200073a57600080fd5b505af11580156200074f573d6000803e3d6000fd5b505050506040513d60208110156200076657600080fd5b81019080805190602001909291905050509050919050565b60606000806060600080861415620007ce576040805190810160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509450620008d7565b8593505b600084141515620007fb578280600101935050600a84811515620007f257fe5b049350620007d2565b826040519080825280601f01601f1916602001820160405280156200082f5781602001602082028038833980820191505090505b5091506001830390505b600086141515620008d357600a868115156200085157fe5b066030017f0100000000000000000000000000000000000000000000000000000000000000028282806001900393508151811015156200088d57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a86811515620008ca57fe5b04955062000839565b8194505b50505050919050565b606062000931856200091c8662000907878762000f46640100000000026401000000009004565b62000f46640100000000026401000000009004565b62000f46640100000000026401000000009004565b9050949350505050565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480620009bf57506000620009bd6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1662000f19640100000000026401000000009004565b145b15620009e257620009e0600062000f24640100000000026401000000009004565b505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801562000a6857600080fd5b505af115801562000a7d573d6000803e3d6000fd5b505050506040513d602081101562000a9457600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151562000c00576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801562000b8257600080fd5b505af115801562000b97573d6000803e3d6000fd5b505050506040513d602081101562000bae57600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889856040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b8381101562000cac57808201518184015260208101905062000c8f565b50505050905090810190601f16801562000cda5780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b15801562000cfa57600080fd5b505af115801562000d0f573d6000803e3d6000fd5b505050506040513d602081101562000d2657600080fd5b8101908080519060200190929190505050905062030d403a02670de0b6b3a76400000181111562000d5e576000600102915062000f11565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663adf59f99828787876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b8381101562000e1757808201518184015260208101905062000dfa565b50505050905090810190601f16801562000e455780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b8381101562000e8057808201518184015260208101905062000e63565b50505050905090810190601f16801562000eae5780820380516001836020036101000a031916815260200191505b50955050505050506020604051808303818588803b15801562000ed057600080fd5b505af115801562000ee5573d6000803e3d6000fd5b50505050506040513d602081101562000efd57600080fd5b810190808051906020019092919050505091505b509392505050565b6000813b9050919050565b600062000f3f62000f9e640100000000026401000000009004565b9050919050565b606062000f968383602060405190810160405280600081525060206040519081016040528060008152506020604051908101604052806000815250620014f6640100000000026401000000009004565b905092915050565b60008062000fcf731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed62000f19640100000000026401000000009004565b11156200108357731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620010796040805190810160405280600b81526020017f6574685f6d61696e6e657400000000000000000000000000000000000000000081525062001920640100000000026401000000009004565b60019050620014f3565b6000620010b373c03a2615d5efaf5f49f60b7bb6583eaec212fdf162000f19640100000000026401000000009004565b1115620011675773c03a2615d5efaf5f49f60b7bb6583eaec212fdf16000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200115d6040805190810160405280600c81526020017f6574685f726f707374656e33000000000000000000000000000000000000000081525062001920640100000000026401000000009004565b60019050620014f3565b60006200119773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e62000f19640100000000026401000000009004565b11156200124b5773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620012416040805190810160405280600981526020017f6574685f6b6f76616e000000000000000000000000000000000000000000000081525062001920640100000000026401000000009004565b60019050620014f3565b60006200127b73146500cfd35b22e4a392fe0adc06de1a1368ed4862000f19640100000000026401000000009004565b11156200132f5773146500cfd35b22e4a392fe0adc06de1a1368ed486000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620013256040805190810160405280600b81526020017f6574685f72696e6b65627900000000000000000000000000000000000000000081525062001920640100000000026401000000009004565b60019050620014f3565b60006200135f736f485c8bf6fc43ea212e93bbf8ce046c7f1cb47562000f19640100000000026401000000009004565b1115620013c457736f485c8bf6fc43ea212e93bbf8ce046c7f1cb4756000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050620014f3565b6000620013f47320e12a1f859b3feae5fb2a0a32c18f5a65555bbf62000f19640100000000026401000000009004565b111562001459577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050620014f3565b6000620014897351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa62000f19640100000000026401000000009004565b1115620014ee577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050620014f3565b600090505b90565b6060806060806060806060806000808e98508d97508c96508b95508a94508451865188518a518c51010101016040519080825280601f01601f191660200182016040528015620015555781602001602082028038833980820191505090505b50935083925060009150600090505b88518110156200161b5788818151811015156200157d57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000028383806001019450815181101515620015dd57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505062001564565b600090505b8751811015620016d75787818151811015156200163957fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f01000000000000000000000000000000000000000000000000000000000000000283838060010194508151811015156200169957fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505062001620565b600090505b865181101562001793578681815181101515620016f557fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f01000000000000000000000000000000000000000000000000000000000000000283838060010194508151811015156200175557fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050620016dc565b600090505b85518110156200184f578581815181101515620017b157fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f01000000000000000000000000000000000000000000000000000000000000000283838060010194508151811015156200181157fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505062001798565b600090505b84518110156200190b5784818151811015156200186d57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000028383806001019450815181101515620018cd57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505062001854565b82995050505050505050505095945050505050565b8060029080519060200190620019389291906200193c565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200197f57805160ff1916838001178555620019b0565b82800160010185558215620019b0579182015b82811115620019af57825182559160200191906001019062001992565b5b509050620019bf9190620019c3565b5090565b620019e891905b80821115620019e4576000816000905550600101620019ca565b5090565b90565b611d8180620019fb6000396000f300608060405260043610610078576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806327dc297e1461007d57806338bbfa50146100f45780634fb2e45d146101b1578063565974d3146101f45780638437081314610268578063df7bf70414610292575b600080fd5b34801561008957600080fd5b506100f26004803603810190808035600019169060200190929190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506102c4565b005b34801561010057600080fd5b506101af6004803603810190808035600019169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061049b565b005b3480156101bd57600080fd5b506101f2600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104a0565b005b34801561020057600080fd5b50610209610540565b604051808981526020018860001916600019168152602001876000191660001916815260200186600019166000191681526020018581526020018481526020018381526020018281526020019850505050505050505060405180910390f35b610290600480360381019080803590602001909291908035906020019092919050505061057e565b005b34801561029e57600080fd5b506102a76106f9565b604051808381526020018281526020019250505060405180910390f35b6102cc610710565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806103525750600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b801561036057506000600654145b15156103d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f496e76616c6964204f7261636c652043616c6c6261636b00000000000000000081525060200191505060405180910390fd5b7fb749f9f34ea0f118080413f464339dbd20e14dc877db555d47b85ff4f418d649816040518080602001828103825283818151815260200191508051906020019080838360005b8381101561043657808201518184015260208101905061041b565b50505050905090810190601f1680156104635780820380516001836020036101000a031916815260200191505b509250505060405180910390a18060149080519060200190610486929190611c8f565b5061048f610a6e565b6104976110d5565b5050565b505050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156104fc57600080fd5b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080600080600080600080600854600954600a54600b54600c54600d54600e54600654975097509750975097509750975097509091929394959697565b3373ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff161480156105bb5750600e543410155b80156105c957506103e88211155b80156105d757506103e88111155b15156105e257600080fd5b600f6060604051908101604052803373ffffffffffffffffffffffffffffffffffffffff168152602001848152602001838152509080600181540180825580915050906001820390600052602060002090600302016000909192909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201555050503373ffffffffffffffffffffffffffffffffffffffff167fd9fd7ff1b2e807f687c0bbd788ba5362d0e7c7bdcdbea264adf9457c9e2b35ec8383604051808381526020018281526020019250505060405180910390a25050565b600080601060010154601060020154915091509091565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806107805750600061077e6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661124a565b145b156107915761078f6000611255565b505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561081657600080fd5b505af115801561082a573d6000803e3d6000fd5b505050506040513d602081101561084057600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156109a8576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561092c57600080fd5b505af1158015610940573d6000803e3d6000fd5b505050506040513d602081101561095657600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610a2e57600080fd5b505af1158015610a42573d6000803e3d6000fd5b505050506040513d6020811015610a5857600080fd5b8101908080519060200190929190505050905090565b600080600080600080610b5060148054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b105780601f10610ae557610100808354040283529160200191610b10565b820191906000526020600020905b815481529060010190602001808311610af357829003601f168201915b50505050506040805190810160405280600181526020017f3000000000000000000000000000000000000000000000000000000000000000815250611266565b15610b5a576110cd565b610bff60148054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610bf35780601f10610bc857610100808354040283529160200191610bf3565b820191906000526020600020905b815481529060010190602001808311610bd657829003601f168201915b5050505050600061142c565b9550620f423f861115610c11576110cd565b60016006819055506103e886811515610c2657fe5b0494506103e88502860393506060604051908101604052803373ffffffffffffffffffffffffffffffffffffffff16815260200186815260200185815250601060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201559050506402540be4009150600090505b600f8054905081101561108d57610df16010606060405190810160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282015481525050600f83815481101515610d6857fe5b9060005260206000209060030201606060405190810160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282015481525050611720565b1561108057610f09600f82815481101515610e0857fe5b9060005260206000209060030201606060405190810160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815250506010606060405190810160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282015481525050611792565b925081831015610fcf5782915060136000610f249190611d0f565b6013600f82815481101515610f3557fe5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061107f565b8183141561107e576013600f82815481101515610fe857fe5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505b5b5b8080600101915050610cd1565b7ffce25d0084d4e4c40132a93c5b5630453901e52fb4e21103e4c07802e8a36ada8585604051808381526020018281526020019250505060405180910390a15b505050505050565b600080600060075460640392503073ffffffffffffffffffffffffffffffffffffffff16319150600060138054905011156111c25760646013805490500283830281151561111f57fe5b049250600090505b6013805490508110156111c15760138181548110151561114357fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc849081150290604051600060405180830381858888f193505050501580156111b3573d6000803e3d6000fd5b508080600101915050611127565b5b3073ffffffffffffffffffffffffffffffffffffffff16319150600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015611244573d6000803e3d6000fd5b50505050565b6000813b9050919050565b600061125f6117c1565b9050919050565b60008151835114151561127c5760009050611426565b816040516020018082805190602001908083835b6020831015156112b55780518252602082019150602081019050602083039250611290565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b60208310151561131e57805182526020820191506020810190506020830392506112f9565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060001916836040516020018082805190602001908083835b6020831015156113885780518252602082019150602081019050602083039250611363565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b6020831015156113f157805182526020820191506020810190506020830392506113cc565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020600019161490505b92915050565b6000606060008060008693506000925060009150600090505b83518110156117015760307f010000000000000000000000000000000000000000000000000000000000000002848281518110151561148057fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191610158015611598575060397f010000000000000000000000000000000000000000000000000000000000000002848281518110151561152857fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191611155b156116495781156115bb5760008614156115b157611701565b8580600190039650505b600a83029250603084828151811015156115d157fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f0100000000000000000000000000000000000000000000000000000000000000900403830192506116f4565b602e7f010000000000000000000000000000000000000000000000000000000000000002848281518110151561167b57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614156116f357600191505b5b8080600101915050611445565b60008611156117135785600a0a830292505b8294505050505092915050565b600082604001518360200151118015611740575081604001518260200151115b80611765575082604001518360200151108015611764575081604001518260200151105b5b8061178a575082604001518360200151148015611789575081604001518260200151145b5b905092915050565b60006117a683604001518360400151611c50565b6117b884602001518460200151611c50565b01905092915050565b6000806117e1731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed61124a565b111561188257731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506118796040805190810160405280600b81526020017f6574685f6d61696e6e6574000000000000000000000000000000000000000000815250611c75565b60019050611c4d565b60006118a173c03a2615d5efaf5f49f60b7bb6583eaec212fdf161124a565b11156119425773c03a2615d5efaf5f49f60b7bb6583eaec212fdf16000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506119396040805190810160405280600c81526020017f6574685f726f707374656e330000000000000000000000000000000000000000815250611c75565b60019050611c4d565b600061196173b7a07bcf2ba2f2703b24c0691b5278999c59ac7e61124a565b1115611a025773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506119f96040805190810160405280600981526020017f6574685f6b6f76616e0000000000000000000000000000000000000000000000815250611c75565b60019050611c4d565b6000611a2173146500cfd35b22e4a392fe0adc06de1a1368ed4861124a565b1115611ac25773146500cfd35b22e4a392fe0adc06de1a1368ed486000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611ab96040805190810160405280600b81526020017f6574685f72696e6b656279000000000000000000000000000000000000000000815250611c75565b60019050611c4d565b6000611ae1736f485c8bf6fc43ea212e93bbf8ce046c7f1cb47561124a565b1115611b4457736f485c8bf6fc43ea212e93bbf8ce046c7f1cb4756000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611c4d565b6000611b637320e12a1f859b3feae5fb2a0a32c18f5a65555bbf61124a565b1115611bc6577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611c4d565b6000611be57351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa61124a565b1115611c48577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611c4d565b600090505b90565b6000818311611c655782820383830302611c6d565b818303828403025b905092915050565b8060029080519060200190611c8b929190611c8f565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611cd057805160ff1916838001178555611cfe565b82800160010185558215611cfe579182015b82811115611cfd578251825591602001919060010190611ce2565b5b509050611d0b9190611d30565b5090565b5080546000825590600052602060002090810190611d2d9190611d30565b50565b611d5291905b80821115611d4e576000816000905550600101611d36565b5090565b905600a165627a7a7230582000e064ad7840a077b3a20f7b4177ea648fc4b8fd071844e019d77fa990ebce3e0029',
                gas: '4700000'
            },

            function (err, deployedContract) {
                if (!err) {
                    console.log(deployedContract["transactionHash"]);
                    $('#addMatchModal').modal('hide')
                    $('#solidBetTransactionModal').modal({
                        keyboard: false,
                        show: true
                    });

                    $.ajax({
                        method: 'POST',
                        contentType: 'application/json',
                        url: '/v1/contracts',
                        data: JSON.stringify({
                            account: App.account,
                            type: +visibility_flag,
                            uuid: +App.matchId,
                            category: 'matches',
                            transactionHash: deployedContract["transactionHash"],
                            execution_time: Math.floor(new Date(match["utcDate"]).getTime() / 1000)
                        }),
                        success: function (data, textStatus, jqXHR) {
                            let content = "";
                            let link = `https://ropsten.etherscan.io/tx/${deployedContract["transactionHash"]}`;
                            content += `Successfully deployed contract for match: ${+App.matchId}<br/>`;
                            content += `Track your transaction on the ropsten network by clicking <a href="${link}" target="_blank">here</a>`
                            $("#solidBetTransactionModalBody").html(content);
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            console.log('Failed to post data.');
                        }
                    });
                } else {
                    console.log(err);
                }
            });
    },

    createCryptoBetContract: function () {
        var _creator = App.account;
        var _currency = App.currencyId;
        let __closure_delay = $("#closure_delay").val();
        let __execution_delay = $("#execution_delay").val();
        let visibility_flag = $('#visibility_flag option:selected').val();
        let _closureDelay = new Date(__closure_delay).getTime() / 1000;
        let _executionDelay = new Date(__execution_delay).getTime() / 1000;
        var _subscriptionPrice = $("#subscription_price").val() * 1e18;
        var cryptopricebetContract = web3.eth.contract(SOLID_CRYPTO_BET_ABI);
        var cryptopricebet = cryptopricebetContract.new(
            _creator,
            _currency,
            _closureDelay,
            _executionDelay,
            _subscriptionPrice,
            {
                from: App.account,
                value: 0.01 * 1e18,
                data: '0x608060408190526005805460a060020a61ffff0219169055600a805460ff1916905560a080620032628339810160409081528151602083015191830151606084015160809094015160058054600160a060020a0319163317905591939091818310620000cc57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f496e76616c69642054696d696e67000000000000000000000000000000000000604482015290519081900360640190fd5b6005805433600160a060020a03199182161790915560128054909116600160a060020a03871617905560068490556007839055600882905560098190556200011c64010000000062000127810204565b505050505062000dda565b60408051808201909152600381527f55524c000000000000000000000000000000000000000000000000000000000060208201526200016f9064010000000062000244810204565b303111620001de57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600760248201527f4e6f204247617a00000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b620002416007546040805190810160405280600381526020017f55524c00000000000000000000000000000000000000000000000000000000008152506020604051908101604052806000815250620004ff640100000000026401000000009004565b50565b60008054600160a060020a031615806200027b57506000546200027990600160a060020a031664010000000062000953810204565b155b15620002985762000296600064010000000062000957810204565b505b6000809054906101000a9004600160a060020a0316600160a060020a03166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156200030457600080fd5b505af115801562000319573d6000803e3d6000fd5b505050506040513d60208110156200033057600080fd5b5051600154600160a060020a0390811691161462000402576000809054906101000a9004600160a060020a0316600160a060020a03166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015620003b457600080fd5b505af1158015620003c9573d6000803e3d6000fd5b505050506040513d6020811015620003e057600080fd5b505160018054600160a060020a031916600160a060020a039092169190911790555b6001546040517f524f3889000000000000000000000000000000000000000000000000000000008152602060048201818152855160248401528551600160a060020a039094169363524f388993879383926044909201919085019080838360005b838110156200047d57818101518382015260200162000463565b50505050905090810190601f168015620004ab5780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b158015620004cb57600080fd5b505af1158015620004e0573d6000803e3d6000fd5b505050506040513d6020811015620004f757600080fd5b505192915050565b600080548190600160a060020a031615806200053857506000546200053690600160a060020a031664010000000062000953810204565b155b15620005555762000553600064010000000062000957810204565b505b6000809054906101000a9004600160a060020a0316600160a060020a03166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015620005c157600080fd5b505af1158015620005d6573d6000803e3d6000fd5b505050506040513d6020811015620005ed57600080fd5b5051600154600160a060020a03908116911614620006bf576000809054906101000a9004600160a060020a0316600160a060020a03166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156200067157600080fd5b505af115801562000686573d6000803e3d6000fd5b505050506040513d60208110156200069d57600080fd5b505160018054600160a060020a031916600160a060020a039092169190911790555b6001546040517f524f3889000000000000000000000000000000000000000000000000000000008152602060048201818152875160248401528751600160a060020a039094169363524f388993899383926044909201919085019080838360005b838110156200073a57818101518382015260200162000720565b50505050905090810190601f168015620007685780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b1580156200078857600080fd5b505af11580156200079d573d6000803e3d6000fd5b505050506040513d6020811015620007b457600080fd5b50519050670de0b6b3a764000062030d403a0201811115620007da57600091506200094b565b6001546040517fadf59f9900000000000000000000000000000000000000000000000000000000815260048101878152606060248301908152875160648401528751600160a060020a039094169363adf59f999386938b938b938b936044810191608490910190602087019080838360005b83811015620008665781810151838201526020016200084c565b50505050905090810190601f168015620008945780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b83811015620008c9578181015183820152602001620008af565b50505050905090810190601f168015620008f75780820380516001836020036101000a031916815260200191505b50955050505050506020604051808303818588803b1580156200091957600080fd5b505af11580156200092e573d6000803e3d6000fd5b50505050506040513d60208110156200094657600080fd5b505191505b509392505050565b3b90565b60006200096c64010000000062000972810204565b92915050565b6000806200099d731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed64010000000062000953810204565b111562000a1b5760008054600160a060020a031916731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed17905560408051808201909152600b81527f6574685f6d61696e6e6574000000000000000000000000000000000000000000602082015262000a129064010000000062000d1f810204565b50600162000d1c565b600062000a4573c03a2615d5efaf5f49f60b7bb6583eaec212fdf164010000000062000953810204565b111562000aba5760008054600160a060020a03191673c03a2615d5efaf5f49f60b7bb6583eaec212fdf117905560408051808201909152600c81527f6574685f726f707374656e330000000000000000000000000000000000000000602082015262000a129064010000000062000d1f810204565b600062000ae473b7a07bcf2ba2f2703b24c0691b5278999c59ac7e64010000000062000953810204565b111562000b595760008054600160a060020a03191673b7a07bcf2ba2f2703b24c0691b5278999c59ac7e17905560408051808201909152600981527f6574685f6b6f76616e0000000000000000000000000000000000000000000000602082015262000a129064010000000062000d1f810204565b600062000b8373146500cfd35b22e4a392fe0adc06de1a1368ed4864010000000062000953810204565b111562000bf85760008054600160a060020a03191673146500cfd35b22e4a392fe0adc06de1a1368ed4817905560408051808201909152600b81527f6574685f72696e6b656279000000000000000000000000000000000000000000602082015262000a129064010000000062000d1f810204565b600062000c22736f485c8bf6fc43ea212e93bbf8ce046c7f1cb47564010000000062000953810204565b111562000c58575060008054600160a060020a031916736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475179055600162000d1c565b600062000c827320e12a1f859b3feae5fb2a0a32c18f5a65555bbf64010000000062000953810204565b111562000cb8575060008054600160a060020a0319167320e12a1f859b3feae5fb2a0a32c18f5a65555bbf179055600162000d1c565b600062000ce27351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa64010000000062000953810204565b111562000d18575060008054600160a060020a0319167351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa179055600162000d1c565b5060005b90565b805162000d3490600290602084019062000d38565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1062000d7b57805160ff191683800117855562000dab565b8280016001018555821562000dab579182015b8281111562000dab57825182559160200191906001019062000d8e565b5062000db992915062000dbd565b5090565b62000d1c91905b8082111562000db9576000815560010162000dc4565b6124788062000dea6000396000f30060806040526004361061010e5763ffffffff60e060020a6000350416630f574ba78114610113578063200d2ed21461013057806327dc297e1461016957806338bbfa50146101c95780633f4ba83a1461026557806348c4a7ef1461027a5780634ef9b89c1461028f5780635797100d146102b057806359221a68146102c55780635c975abb146102f957806361bc221a1461032257806365372147146103375780638456cb59146103c15780638b257989146103d65780638da5cb5b146103eb5780639ead8f9d14610400578063a2fb117514610415578063bdc8e54c1461042d578063e3ae85f014610442578063e5a6b10f14610457578063efbe1c1c1461046c578063f2fde38b14610481575b600080fd5b61011e6004356104a2565b60408051918252519081900360200190f35b34801561013c57600080fd5b506101456105e4565b6040518082600381111561015557fe5b60ff16815260200191505060405180910390f35b34801561017557600080fd5b5060408051602060046024803582810135601f81018590048502860185019096528585526101c79583359536956044949193909101919081908401838280828437509497506105ed9650505050505050565b005b3480156101d557600080fd5b5060408051602060046024803582810135601f81018590048502860185019096528585526101c795833595369560449491939091019190819084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a9998810197919650918201945092508291508401838280828437509497506106a09650505050505050565b34801561027157600080fd5b506101c76106a5565b34801561028657600080fd5b5061011e610767565b34801561029b57600080fd5b5061011e600160a060020a036004351661076d565b3480156102bc57600080fd5b506101c761077f565b3480156102d157600080fd5b506102dd60043561092e565b60408051600160a060020a039092168252519081900360200190f35b34801561030557600080fd5b5061030e610956565b604080519115158252519081900360200190f35b34801561032e57600080fd5b5061011e610977565b34801561034357600080fd5b5061034c61097d565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561038657818101518382015260200161036e565b50505050905090810190601f1680156103b35780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156103cd57600080fd5b506101c7610a14565b3480156103e257600080fd5b5061011e610aec565b3480156103f757600080fd5b506102dd610af2565b34801561040c57600080fd5b5061011e610b01565b34801561042157600080fd5b506102dd600435610b07565b34801561043957600080fd5b5061011e610b15565b34801561044e57600080fd5b5061011e610b1b565b34801561046357600080fd5b5061011e610b21565b34801561047857600080fd5b506101c7610b27565b34801561048d57600080fd5b506101c7600160a060020a0360043516610b85565b6005546000907501000000000000000000000000000000000000000000900460ff16156104ce57600080fd5b6005805475ff00000000000000000000000000000000000000000019167501000000000000000000000000000000000000000000179055323314801561052457506000600a5460ff16600381111561052257fe5b145b801561053d5750336000908152600c6020526040902054155b80156105495750600082115b801561055757506009543410155b151561056257600080fd5b50600b805460018181019092557f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9018054600160a060020a031916339081179091556000908152600c6020526040902082905560108054909101908190556005805475ff00000000000000000000000000000000000000000019169055919050565b600a5460ff1681565b6105f5610c46565b600160a060020a03163314610654576040805160e560020a62461bcd02815260206004820152601760248201527f496e76616c6964204f7261636c652043616c6c6261636b000000000000000000604482015290519081900360640190fd5b6000600a5460ff16600381111561066757fe5b141561067a57610675610e37565b61069c565b6001600a5460ff16600381111561068d57fe5b141561069c5761069c81611029565b5050565b505050565b600554600160a060020a031633146106f5576040805160e560020a62461bcd02815260206004820152600c602482015260008051602061242d833981519152604482015290519081900360640190fd5b60055474010000000000000000000000000000000000000000900460ff16151561071e57600080fd5b6005805474ff0000000000000000000000000000000000000000191690556040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3390600090a1565b60075481565b600c6020526000908152604090205481565b6005546000907501000000000000000000000000000000000000000000900460ff16156107ab57600080fd5b6005805475ff00000000000000000000000000000000000000000019167501000000000000000000000000000000000000000000179081905533600160a060020a0390911614610833576040805160e560020a62461bcd02815260206004820152600c602482015260008051602061242d833981519152604482015290519081900360640190fd5b6003600a5460ff16600381111561084657fe5b1461089b576040805160e560020a62461bcd02815260206004820152600e60248201527f4e6f74204170706c696361626c65000000000000000000000000000000000000604482015290519081900360640190fd5b600a5460405160008051602061240d8339815191529160ff1690600190808360038111156108c557fe5b60ff1681526020018260038111156108d957fe5b60ff1681526020019250505060405180910390a150600a805460ff191660011781556008805491905561090a610e37565b6008556005805475ff00000000000000000000000000000000000000000019169055565b600b80548290811061093c57fe5b600091825260209091200154600160a060020a0316905081565b60055474010000000000000000000000000000000000000000900460ff1681565b60105481565b60118054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610a095780601f106109de57610100808354040283529160200191610a09565b820191906000526020600020905b8154815290600101906020018083116109ec57829003601f168201915b505050505090505b90565b600554600160a060020a03163314610a64576040805160e560020a62461bcd02815260206004820152600c602482015260008051602061242d833981519152604482015290519081900360640190fd5b60055474010000000000000000000000000000000000000000900460ff1615610a8c57600080fd5b6005805474ff00000000000000000000000000000000000000001916740100000000000000000000000000000000000000001790556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62590600090a1565b60085481565b600554600160a060020a031681565b600e5481565b600d80548290811061093c57fe5b60095481565b600f5481565b60065481565b600554600160a060020a03163314610b77576040805160e560020a62461bcd02815260206004820152600c602482015260008051602061242d833981519152604482015290519081900360640190fd5b600554600160a060020a0316ff5b600554600160a060020a03163314610bd5576040805160e560020a62461bcd02815260206004820152600c602482015260008051602061242d833981519152604482015290519081900360640190fd5b600160a060020a0381161515610bea57600080fd5b600554604051600160a060020a038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a360058054600160a060020a031916600160a060020a0392909216919091179055565b60008054600160a060020a03161580610c715750600054610c6f90600160a060020a03166114ba565b155b15610c8257610c8060006114be565b505b6000809054906101000a9004600160a060020a0316600160a060020a03166338cc48316040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015610cd457600080fd5b505af1158015610ce8573d6000803e3d6000fd5b505050506040513d6020811015610cfe57600080fd5b5051600154600160a060020a03908116911614610db3576000809054906101000a9004600160a060020a0316600160a060020a03166338cc48316040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015610d6757600080fd5b505af1158015610d7b573d6000803e3d6000fd5b505050506040513d6020811015610d9157600080fd5b505160018054600160a060020a031916600160a060020a039092169190911790555b600160009054906101000a9004600160a060020a0316600160a060020a031663c281d19e6040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015610e0657600080fd5b505af1158015610e1a573d6000803e3d6000fd5b505050506040513d6020811015610e3057600080fd5b5051905090565b600a54604051606091829160008051602061240d8339815191529160ff169060019080836003811115610e6657fe5b60ff168152602001826003811115610e7a57fe5b60ff1681526020019250505060405180910390a1600a805460ff1916600117905560408051808201909152600381527f55524c00000000000000000000000000000000000000000000000000000000006020820152610ed8906114ce565b303111610f2f576040805160e560020a62461bcd02815260206004820152600760248201527f4e6f204247617a00000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b606060405190810160405280602d81526020017f6a736f6e2868747470733a2f2f6170692e636f696e6d61726b65746361702e6381526020017f6f6d2f76322f7469636b65722f000000000000000000000000000000000000008152509150610fd5610f9c600654611732565b60408051808201909152601881527f2f292e646174612e71756f7465732e5553442e707269636500000000000000006020820152611825565b9050610fe18282611825565b91506106a0600754600854036040805190810160405280600381526020017f55524c000000000000000000000000000000000000000000000000000000000081525084611861565b60008080808060608180808080806001600a5460ff16600381111561104a57fe5b148061106657506003600a5460ff16600381111561106457fe5b145b15156110bc576040805160e560020a62461bcd02815260206004820152600e60248201527f496e76616c696420537461747573000000000000000000000000000000000000604482015290519081900360640190fd5b8c601190805190602001906110d2929190612374565b506110de8d6006611c53565b600b54604080518281526020808402820101909152919c50600099508015611110578160200160208202803883390190505b50965060008b111561144c5760009b505b600b548c101561127d5761116c600c6000600b8f81548110151561114157fe5b6000918252602080832090910154600160a060020a031683528201929092526040019020548c611dc5565b99508b151561117c578960010198505b888a101561121757600b8054600099508d90811061119657fe5b6000918252602090912001548751600160a060020a039091169088908a9081106111bc57fe5b600160a060020a03909216602092830290910190910152600b80548b9a50600c916000918f9081106111ea57fe5b6000918252602080832090910154600160a060020a03168352820192909252604001902054600e55611272565b888a141561127257600b80548d90811061122d57fe5b600091825260209091200154875160019990990198600160a060020a039091169088908a90811061125a57fe5b600160a060020a039092166020928302909101909101525b6001909b019a611121565b601054600954029550606460468702049450876001018581151561129d57fe5b04935084860392506064604684026005546040519290910493503031889003848603019250600160a060020a03169082156108fc029083906000818181858888f193505050501580156112f4573d6000803e3d6000fd5b50601254604051600160a060020a039091169083156108fc029084906000818181858888f1935050505015801561132f573d6000803e3d6000fd5b5060009b505b878c116113e357600d878d81518110151561134c57fe5b6020908102919091018101518254600181018455600093845291909220018054600160a060020a031916600160a060020a03909216919091179055865187908d90811061139557fe5b90602001906020020151600160a060020a03166108fc859081150290604051600060405180830381858888f193505050501580156113d7573d6000803e3d6000fd5b506001909b019a611335565b600f849055600a5460405160008051602061240d8339815191529160ff16906002908083600381111561141257fe5b60ff16815260200182600381111561142657fe5b60ff1681526020019250505060405180910390a1600a805460ff191660021790556114ab565b600a5460405160008051602061240d8339815191529160ff169060039080838381111561147557fe5b60ff16815260200182600381111561148957fe5b60ff1681526020019250505060405180910390a1600a805460ff191660031790555b50505050505050505050505050565b3b90565b60006114c8611ddc565b92915050565b60008054600160a060020a031615806114f957506000546114f790600160a060020a03166114ba565b155b1561150a5761150860006114be565b505b6000809054906101000a9004600160a060020a0316600160a060020a03166338cc48316040518163ffffffff1660e060020a028152600401602060405180830381600087803b15801561155c57600080fd5b505af1158015611570573d6000803e3d6000fd5b505050506040513d602081101561158657600080fd5b5051600154600160a060020a0390811691161461163b576000809054906101000a9004600160a060020a0316600160a060020a03166338cc48316040518163ffffffff1660e060020a028152600401602060405180830381600087803b1580156115ef57600080fd5b505af1158015611603573d6000803e3d6000fd5b505050506040513d602081101561161957600080fd5b505160018054600160a060020a031916600160a060020a039092169190911790555b6001546040517f524f3889000000000000000000000000000000000000000000000000000000008152602060048201818152855160248401528551600160a060020a039094169363524f388993879383926044909201919085019080838360005b838110156116b457818101518382015260200161169c565b50505050905090810190601f1680156116e15780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b15801561170057600080fd5b505af1158015611714573d6000803e3d6000fd5b505050506040513d602081101561172a57600080fd5b505192915050565b6060600080828185151561177b5760408051808201909152600181527f30000000000000000000000000000000000000000000000000000000000000006020820152945061181c565b8593505b831561179657600190920191600a8404935061177f565b826040519080825280601f01601f1916602001820160405280156117c4578160200160208202803883390190505b5091505060001982015b851561181857815160001982019160f860020a6030600a8a0601029184919081106117f557fe5b906020010190600160f860020a031916908160001a905350600a860495506117ce565b8194505b50505050919050565b60408051602081810183526000808352835180830185528181528451928301909452815260609261185a928692869290612104565b9392505050565b600080548190600160a060020a0316158061188e575060005461188c90600160a060020a03166114ba565b155b1561189f5761189d60006114be565b505b6000809054906101000a9004600160a060020a0316600160a060020a03166338cc48316040518163ffffffff1660e060020a028152600401602060405180830381600087803b1580156118f157600080fd5b505af1158015611905573d6000803e3d6000fd5b505050506040513d602081101561191b57600080fd5b5051600154600160a060020a039081169116146119d0576000809054906101000a9004600160a060020a0316600160a060020a03166338cc48316040518163ffffffff1660e060020a028152600401602060405180830381600087803b15801561198457600080fd5b505af1158015611998573d6000803e3d6000fd5b505050506040513d60208110156119ae57600080fd5b505160018054600160a060020a031916600160a060020a039092169190911790555b6001546040517f524f3889000000000000000000000000000000000000000000000000000000008152602060048201818152875160248401528751600160a060020a039094169363524f388993899383926044909201919085019080838360005b83811015611a49578181015183820152602001611a31565b50505050905090810190601f168015611a765780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b158015611a9557600080fd5b505af1158015611aa9573d6000803e3d6000fd5b505050506040513d6020811015611abf57600080fd5b50519050670de0b6b3a764000062030d403a0201811115611ae35760009150611c4b565b6001546040517fadf59f9900000000000000000000000000000000000000000000000000000000815260048101878152606060248301908152875160648401528751600160a060020a039094169363adf59f999386938b938b938b936044810191608490910190602087019080838360005b83811015611b6d578181015183820152602001611b55565b50505050905090810190601f168015611b9a5780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b83811015611bcd578181015183820152602001611bb5565b50505050905090810190601f168015611bfa5780820380516001836020036101000a031916815260200191505b50955050505050506020604051808303818588803b158015611c1b57600080fd5b505af1158015611c2f573d6000803e3d6000fd5b50505050506040513d6020811015611c4657600080fd5b505191505b509392505050565b6000828180805b8351811015611da85783517f300000000000000000000000000000000000000000000000000000000000000090859083908110611c9357fe5b90602001015160f860020a900460f860020a02600160f860020a03191610158015611d09575083517f390000000000000000000000000000000000000000000000000000000000000090859083908110611ce957fe5b90602001015160f860020a900460f860020a02600160f860020a03191611155b15611d62578115611d2857851515611d2057611da8565b600019909501945b600a8302925060308482815181101515611d3e57fe5b90602001015160f860020a900460f860020a0260f860020a90040383019250611da0565b8381815181101515611d7057fe5b90602001015160f860020a900460f860020a02600160f860020a031916602e60f860020a021415611da057600191505b600101611c5a565b6000861115611dba5785600a0a830292505b509095945050505050565b6000818311611dd65782820361185a565b50900390565b600080611dfc731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed6114ba565b1115611e6d5760008054600160a060020a031916731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed17905560408051808201909152600b81527f6574685f6d61696e6e65740000000000000000000000000000000000000000006020820152611e6590612365565b506001610a11565b6000611e8c73c03a2615d5efaf5f49f60b7bb6583eaec212fdf16114ba565b1115611ef55760008054600160a060020a03191673c03a2615d5efaf5f49f60b7bb6583eaec212fdf117905560408051808201909152600c81527f6574685f726f707374656e3300000000000000000000000000000000000000006020820152611e6590612365565b6000611f1473b7a07bcf2ba2f2703b24c0691b5278999c59ac7e6114ba565b1115611f7d5760008054600160a060020a03191673b7a07bcf2ba2f2703b24c0691b5278999c59ac7e17905560408051808201909152600981527f6574685f6b6f76616e00000000000000000000000000000000000000000000006020820152611e6590612365565b6000611f9c73146500cfd35b22e4a392fe0adc06de1a1368ed486114ba565b11156120055760008054600160a060020a03191673146500cfd35b22e4a392fe0adc06de1a1368ed4817905560408051808201909152600b81527f6574685f72696e6b6562790000000000000000000000000000000000000000006020820152611e6590612365565b6000612024736f485c8bf6fc43ea212e93bbf8ce046c7f1cb4756114ba565b1115612058575060008054600160a060020a031916736f485c8bf6fc43ea212e93bbf8ce046c7f1cb4751790556001610a11565b60006120777320e12a1f859b3feae5fb2a0a32c18f5a65555bbf6114ba565b11156120ab575060008054600160a060020a0319167320e12a1f859b3feae5fb2a0a32c18f5a65555bbf1790556001610a11565b60006120ca7351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa6114ba565b11156120fe575060008054600160a060020a0319167351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa1790556001610a11565b50600090565b6060806060806060806060806000808e98508d97508c96508b95508a94508451865188518a518c51010101016040519080825280601f01601f19166020018201604052801561215d578160200160208202803883390190505b50935083925060009150600090505b88518110156121ca57888181518110151561218357fe5b90602001015160f860020a900460f860020a0283838060010194508151811015156121aa57fe5b906020010190600160f860020a031916908160001a90535060010161216c565b5060005b875181101561222c5787818151811015156121e557fe5b90602001015160f860020a900460f860020a02838380600101945081518110151561220c57fe5b906020010190600160f860020a031916908160001a9053506001016121ce565b5060005b865181101561228e57868181518110151561224757fe5b90602001015160f860020a900460f860020a02838380600101945081518110151561226e57fe5b906020010190600160f860020a031916908160001a905350600101612230565b5060005b85518110156122f05785818151811015156122a957fe5b90602001015160f860020a900460f860020a0283838060010194508151811015156122d057fe5b906020010190600160f860020a031916908160001a905350600101612292565b5060005b845181101561235257848181518110151561230b57fe5b90602001015160f860020a900460f860020a02838380600101945081518110151561233257fe5b906020010190600160f860020a031916908160001a9053506001016122f4565b50909d9c50505050505050505050505050565b805161069c9060029060208401905b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106123b557805160ff19168380011785556123e2565b828001600101855582156123e2579182015b828111156123e25782518255916020019190600101906123c7565b506123ee9291506123f2565b5090565b610a1191905b808211156123ee57600081556001016123f85600d4980e00002f67ad8fb838ac40b098f695814ed62eccaed4e0d1419d27d53f3e4e6f2050726976696c6567650000000000000000000000000000000000000000a165627a7a723058206b6b4c8acdc39cb7cddb92d8315237cd6b2efa699df74b513a4ef9485650ecb20029',
                gas: '4700000'
            }, function (err, deployedContract) {
                if (!err) {
                    if (!deployedContract.address) {
                        console.log(deployedContract["transactionHash"]);
                        $('#addTickerModal').modal('hide')
                        $('#solidBetTransactionModal').modal({
                            keyboard: false,
                            show: true
                        });

                        $.ajax({
                            method: 'POST',
                            contentType: 'application/json',
                            url: '/v1/contracts',
                            data: JSON.stringify({
                                account: App.account,
                                type: +visibility_flag,
                                uuid: App.currencyId,
                                category: 'crypto',
                                transactionHash: deployedContract["transactionHash"],
                                execution_time: _executionDelay
                            }),
                            success: function (data, textStatus, jqXHR) {
                                let content = "";
                                let link = `https://ropsten.etherscan.io/tx/${deployedContract["transactionHash"]}`;
                                content += `Successfully deployed contract for currency id: ${App.currencyId}<br/>`;
                                content += `Track your transaction on the ropsten network by clicking <a href="${link}" target="_blank">here</a>`;
                                $("#solidBetTransactionModalBody").html(content);
                            },
                            error: function (jqXHR, textStatus, errorThrown) {
                                console.log('Failed to post data.');
                            }
                        });

                    } else {
                        console.log(err);
                    }
                }
            });
    },

    getMatches: function () {
        $.ajax({
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded'
            },
            method: 'GET',
            url: base_url + '/v1/matches',
            success: function (data, textStatus, jqXHR) {
                data.forEach(match => {
                    let timestamp = new Date(match["utcDate"]).getTime();
                    App.matches[match.id] = match;
                    let content = `<tr>`;
                    content += `<td>${match["id"]}</td>`;
                    content += `<td>${match["league"]}</td>`;
                    content += `<td>${match["homeTeam"]["name"]}</td>`;
                    content += `<td>${match["awayTeam"]["name"]}</td>`;
                    content += `<td style="word-wrap: break-word">${formatTime(timestamp)}</td>`;
                    content += `<td><a href="${base_url}/matches/${match["id"]}" target="_blank"><button type="button" class="btn btn-primary">View details</button></a></td>`;
                    content += `<td><a href="${base_url}/contracts/${match["id"]}" target="_blank"><button type="button" class="btn btn-primary">View contracts</button></a></td>`;
                    content += `<td><button type="button" class="btn btn-primary" data-toggle="modal" data-target="#addMatchModal" onclick="App.matchId=${match['id']}">Create Bet</button></td>`;
                    content += ` < /tr>`;
                    $("#upcoming_matches_table").prepend(content);
                });
            },
            error: function (jqXHR, textStatus, errorThrown) {

            }
        });
    },

    getTickers: function () {
        $.ajax({
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded'
            },
            method: 'GET',
            url: base_url + '/v1/crypto/tickers',
            success: function (data, textStatus, jqXHR) {
                data.forEach(ticker => {
                    let t = `<tr>`;
                    t += `<td>${ticker['rank']}</td>`;
                    t += `<td><img src="https://s2.coinmarketcap.com/static/img/coins/32x32/${ticker['id']}.png"/> ${ticker['name']}</td>`;
                    t += `<td><a href="https://coinmarketcap.com/currencies/${ticker['name']}/" target="_blank"><button type="button" class="btn btn-primary">View details</button></a></td>`;
                    t += `<td><a href="${base_url}/contracts/${ticker['id']}" target="_blank"><button type="button" class="btn btn-primary">View contracts</button></a></td>`;
                    t += `<td><button type="button" class="btn btn-primary" data-toggle="modal" data-target="#addTickerModal" onclick="App.currencyId=${ticker['id']}">
                        Create Bet
                    </button></td>`;

                    t += `</tr>`;
                    $("#tickets_table").append(t);
                })
            },
            error: function (jqXHR, textStatus, errorThrown) {

            }
        });
    },

    getMatchDetails: function (match_id) {
        $.ajax({
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded'
            },
            method: 'GET',
            url: `${base_url}/v1/matches/${match_id}`,
            success: function (data, textStatus, jqXHR) {
                let content = "";
                content += `<b>League</b>: ${data['league']}<br/>`;
                content += `<b>Time</b>: ${formatTime(data['timestamp'] * 1000)}<br/>`;
                content += `<b>Countdown</b>: <span id="match_details_countdown_${match_id}"></span><br/>`;
                content += `<b>Status</b>: ${data['status']}<br/>`;
                content += `<b>Team one</b>: ${data['teamOne']['name']}<br/>`;
                content += `<b>Team two</b>: ${data['teamTwo']['name']}<br/>`;
                content += `<b>Team one score</b>: ${data['teamOne']['score']}<br/>`;
                content += `<b>Team two score</b>: ${data['teamTwo']['score']}<br/>`;
                content += `<b>Raw score</b>: ${data['raw']}<br/>`;
                content += `<b>Contracts</b>: <a href="${base_url}/contracts/${match_id}" target="_blank">here</a><br/>`;
                $("#match_details").html(content);                // Set the date we're counting down to
                var countDownDate = new Date(data['timestamp'] * 1000).getTime();

                var x = setInterval(function () {

                    var now = new Date().getTime();

                    var distance = countDownDate - now;

                    var weeks = Math.floor(distance / (1000 * 60 * 60 * 24 * 7));
                    var days = Math.floor(distance / (1000 * 60 * 60 * 24)) % 7;
                    var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
                    var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
                    var seconds = Math.floor((distance % (1000 * 60)) / 1000);

                    document.getElementById(`match_details_countdown_${match_id}`).innerHTML = `${weeks} weeks ${days} d ${hours} hr ${minutes} mins ${seconds} secs`;

                    // If the count down is over, write some text
                    if (distance < 0) {
                        clearInterval(x);
                        document.getElementById(`match_details_countdown_${match_id}`).innerHTML = "ENDED";
                    }
                }, 1000);
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.log(errorThrown);
            }
        });
    },

    getContracts: function (uuid) {
        $.ajax({
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded'
            },
            method: 'GET',
            url: `${base_url}/v1/contracts/${uuid}`,
            success: function (data, textStatus, jqXHR) {
                data.forEach(contract => {
                    let category = contract['category'];
                    let content = "";
                    content += `<tr>`;
                    content += `<td>${contract['uuid']}</td>`;
                    content += `<td>${contract['id']}</td>`;
                    content += `<td>${formatTime(contract['time'] * 1000)}</td>`;
                    content += `<td>${formatTime(contract['execution_time'] * 1000)}</td>`;
                    content += `<td><a href="https://ropsten.etherscan.io/tx/${contract['transactionHash']}" target="_blank">here</a></td>`;
                    content += `<td><a href="${base_url}/contracts/${uuid}/${contract['id']}" target="_blank">here</a></td>`;
                    content += `</tr>`;
                    $("#contracts").prepend(content);
                });
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.log(errorThrown);
            }
        });
    },

    getCryptoContract: function (currencyId, betId) {
        $.ajax({
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded'
            },
            method: 'GET',
            url: `${base_url}/v1/contracts/${currencyId}/${betId}`,
            success: function (_data, textStatus, jqXHR) {
                if (_data.length === 1) {
                    let data = _data[0];
                    let CryptoContract = web3.eth.contract(SOLID_CRYPTO_BET_ABI);
                    App.CryptoInstance = CryptoContract.at(data['contractAddress']);
                    /**
                     * OPENED, PENDING, EXECUTED, ERROR
                     */

                    let states = ['OPENED', 'PENDING', 'EXECUTED', 'ERROR'];
                    $("#contractAddress").html(data['contractAddress']);
                    App.CryptoInstance.currency(function (err, res) {
                        $("#currency").html(res.valueOf());
                    });

                    App.CryptoInstance.closureDelay(function (err, res) {
                        $("#closureDelay").html(formatTime(res.valueOf() * 1000));
                    });

                    App.CryptoInstance.executionDelay(function (err, res) {
                        $("#executionDelay").html(formatTime(res.valueOf() * 1000));
                        App.execution_time = res.valueOf();
                    });

                    App.CryptoInstance.subscriptionPrice(function (err, res) {
                        $("#subscriptionPrice").html((res.valueOf() / 1e18) + " ETH");
                        App.CryptoInstancePrice = res.valueOf();
                    });

                    App.CryptoInstance.status(function (err, res) {
                        $("#status").html(states[res.valueOf()]);
                    });

                    App.CryptoInstance.counter(function (err, res) {
                        let counter = res.valueOf();
                        if (counter > 0) {
                            for (let i = 0; i < counter; i++) {
                                App.CryptoInstance.subscribers.call(i, function (err, res) {
                                    console.log(res);
                                });
                            }
                        }
                    });


                    App.CryptoInstance.winGuess.call(function (err, res) {
                        if (res.valueOf() == 0) {
                            $("#winGuess").html('-');
                        } else {
                            $("#winGuess").html(res.valueOf());
                        }
                    });

                    App.CryptoInstance.winReward.call(function (err, res) {
                        if (res.valueOf() == 0) {
                            $("#winReward").html('-');
                        } else {
                            $("#winReward").html(res.valueOf());
                        }
                    });
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.log(errorThrown);
            }
        });
    },

    getMatchContract: function (matchId, betId) {
        $.ajax({
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded'
            },
            method: 'GET',
            url: `${base_url}/v1/contracts/${matchId}/${betId}`,
            success: function (_data, textStatus, jqXHR) {
                if (_data.length === 1) {
                    let data = _data[0];
                    let MatchContract = web3.eth.contract(SOLID_SPORT_BET_ABI);
                    App.MatchInstance = MatchContract.at(data['contractAddress']);
                    let states = ['PENDING', "SUCCESS"];
                    App.MatchInstance.details(function (err, res) {
                        if (!err) {
                            App.MatchInstancePrice = res[6].valueOf();
                            let _matchId = res[0];
                            let _league = web3.toAscii(res[1]);
                            let _teamOne = web3.toAscii(res[2]);
                            let _teamTwo = web3.toAscii(res[3]);
                            let _matchTimestamp = (res[4]).valueOf() * 1000;
                            let _executionDelay = (res[5]).valueOf() * 1000;
                            App.execution_time = res[5].valueOf();
                            let _price = (res[6]).valueOf() / 1e18;
                            let _status = res[7];
                            let content = "";
                            content += `<b>Match #</b>: ${_matchId}<br/>`;
                            content += `<b>Bet #</b>: ${betId}<br/>`;
                            content += `<b>League</b>: ${_league}<br/>`;
                            content += `<b>Team one</b>: ${_teamOne}<br/>`;
                            content += `<b>Team two</b>: ${_teamTwo}<br/>`;
                            content += `<b>Time</b>: ${formatTime(_matchTimestamp)}<br/>`;
                            content += `<b>Execution delay</b>: ${formatTime(_executionDelay)}<br/>`;
                            content += `<b>Price</b>: ${_price} ETH <br/>`;
                            content += `<b>Status</b>: ${states[_status]}<br/>`;
                            $("#bet_details").html(content);
                        }
                    });

                    let allEvents = App.MatchInstance.newSubscriber({
                        // address: App.account
                    }, {
                        fromBlock: 0,
                        toBlock: 'latest',
                    });

                    allEvents.watch(function (error, event) {
                        if (!error) {
                            let result = event['args'];
                            let content = `<tr>`;
                            content += `<td>${result['addr']}</td>`;
                            content += `<td>${result['scoreOne']}</td>`;
                            content += `<td>${result['scoreTwo']}</td>`;
                            content += `</tr>`;
                            $("#bet_subscribers").prepend(content)
                            console.log(event);
                        }
                    });

                    let allEvents2 = App.MatchInstance.betResolved({
                        // address: App.account
                    }, {
                        fromBlock: 0,
                        toBlock: 'latest',
                    });

                    allEvents2.watch(function (error, event) {
                        if (!error) {
                            let result = event['args'];
                            let scoreOne = result['scoreOne'].valueOf();
                            let scoreTwo = result['scoreTwo'].valueOf();
                            let content = ``;
                            content += `<b>Score one</b>: ${scoreOne}<br/>`;
                            content += `<b>Score two</b>: ${scoreTwo}`;
                            $("#result_details").html(content)
                        }
                    });
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.log(errorThrown);
            }
        });
    },

    subscribeMatchContract: function () {
        let inputTeamScoreOne = $("#inputTeamScoreOne").val();
        let inputTeamScoreTwo = $("#inputTeamScoreTwo").val();
        App.MatchInstance.subscribe(inputTeamScoreOne, inputTeamScoreTwo, {
            value: App.MatchInstancePrice,
            from: App.account
        }, function (err, res) {
            if (err) {
                console.log(err);
            } else {
                $.ajax({
                    method: 'POST',
                    contentType: 'application/json',
                    url: '/v1/bets',
                    data: JSON.stringify({
                        id: App.betId,
                        category: 'matches',
                        account: App.account,
                        transactionHash: res,
                        contractAddress: App.MatchInstance.address,
                        execution_time: App.execution_time
                    }),
                    success: function (data, textStatus, jqXHR) {
                        let content = "";
                        let link = `https://ropsten.etherscan.io/tx/${res}`;
                        content += `Successfully subscribed for match: ${+App.matchId}<br/>`;
                        content += `Track your transaction on the ropsten network by clicking <a href="${link}" target="_blank">here</a>`
                        $("#solidBetTransactionModalBody").html(content);
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        console.log('Failed to post data.');
                    }
                });
            }
        });
    },

    subscribeCryptoContract: function () {
        let guess_input = $("#guess_input").val();
        App.CryptoInstance.subscribe(guess_input, {
            value: App.CryptoInstancePrice,
            from: App.account
        }, function (err, res) {
            if (err) {
                console.log(err);
            } else {
                $.ajax({
                    method: 'POST',
                    contentType: 'application/json',
                    url: '/v1/bets',
                    data: JSON.stringify({
                        id: App.betId,
                        category: 'crypto',
                        account: App.account,
                        transactionHash: res,
                        contractAddress: App.CryptoInstance.address,
                        execution_time: App.execution_time
                    }),
                    success: function (data, textStatus, jqXHR) {
                        let content = "";
                        let link = `https://ropsten.etherscan.io/tx/${res}`;
                        content += `Successfully subscribed for match: ${+App.matchId}<br/>`;
                        content += `Track your transaction on the ropsten network by clicking <a href="${link}" target="_blank">here</a>`
                        $("#solidBetTransactionModalBody").html(content);
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        console.log('Failed to post data.');
                    }
                });
            }
        });
    },

    load: async () => {
        App.account = await App.getAccount();
    },

};

function toHex(s) {
    var hex = '';
    for (var i = 0; i < s.length; i++) {
        hex += '' + s.charCodeAt(i).toString(16);
    }
    return `0x${hex}`;
}

function waitSeconds(seconds) {
    return new Promise((resolve, reject) => {
        setTimeout(() => {
            resolve();
        }, seconds * 1000);
    });
}

function dateToSeconds(current_date) {
    return Math.floor(new Date(current_date).getTime() / 1000);
}

$('#solidBetTransactionModal').on('hidden.bs.modal', function (e) {
    $('#solidBetTransactionModalBody').html('');
});

$('#addTickerModal').on('hidden.bs.modal', function (e) {
    App.currencyId = null;
});

$('#addMatchModal').on('hidden.bs.modal', function (e) {
    App.matchId = null;
});

onload = async () => {
    $(document).on('click', '#subscribe_matches_button', App.subscribeMatchContract);
    $(document).on('click', '#subscribe_crypto_button', App.subscribeCryptoContract);
    $(document).on('click', '#add_ticker_button', App.createCryptoBetContract);
    $(document).on('click', '#add_matches_button', App.creatematchesBetContract);

    await App.initWeb3();
    await App.load();
    let pathname = window.location.pathname;
    let link = window.location.href;
    let splitted = link.replace("http://", "");

    // console.log(pathname);
    // console.log(window.location.href);
    splitted = splitted.split("/");
    if (splitted.length === 2 && splitted[1] === 'matches') {
        await App.getMatches();
    }

    if (splitted.length === 2 && splitted[1] === 'crypto') {
        await App.getTickers();
    }

    if (splitted.length === 3 && splitted[1] === 'contracts' && !isNaN(+splitted[2])) {
        await App.getContracts(+splitted[2]);
    }

    if (splitted.length === 3 && splitted[1] === 'matches' && !isNaN(+splitted[2])) {
        await App.getMatchDetails(+splitted[2]);
    }

    if (splitted.length === 4 && splitted[1] === 'contracts' && !isNaN(+splitted[2])) {
        App.getMatchContract(+splitted[2], splitted[3]);
        App.betId = splitted[3];
    }

    if (splitted.length === 4 && splitted[1] === 'contracts' && !isNaN(+splitted[2])) {
        App.getCryptoContract(+splitted[2], splitted[3]);
        App.betId = splitted[3];
    }
};

function formatTime(_timestamp) {
    let current_date = new Date(_timestamp);
    return `${current_date.getUTCDate()}-${current_date.getUTCMonth() + 1}-${current_date.getFullYear()} ${current_date.toLocaleTimeString()}`;
}