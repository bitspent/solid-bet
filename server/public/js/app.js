let base_url = "";
let ABI = [
    {
        "constant": false,
        "inputs": [
            {
                "name": "myid",
                "type": "bytes32"
            },
            {
                "name": "res",
                "type": "string"
            }
        ],
        "name": "__callback",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "constant": false,
        "inputs": [
            {
                "name": "myid",
                "type": "bytes32"
            },
            {
                "name": "result",
                "type": "string"
            },
            {
                "name": "proof",
                "type": "bytes"
            }
        ],
        "name": "__callback",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "constant": true,
        "inputs": [],
        "name": "details",
        "outputs": [
            {
                "name": "_matchId",
                "type": "uint256"
            },
            {
                "name": "_league",
                "type": "bytes32"
            },
            {
                "name": "_teamOne",
                "type": "bytes32"
            },
            {
                "name": "_teamTwo",
                "type": "bytes32"
            },
            {
                "name": "_matchTimestamp",
                "type": "uint256"
            },
            {
                "name": "_executionDelay",
                "type": "uint256"
            },
            {
                "name": "_price",
                "type": "uint256"
            },
            {
                "name": "_status",
                "type": "uint256"
            }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
    },
    {
        "constant": false,
        "inputs": [
            {
                "name": "scoreOne",
                "type": "uint256"
            },
            {
                "name": "scoreTwo",
                "type": "uint256"
            }
        ],
        "name": "subscribe",
        "outputs": [],
        "payable": true,
        "stateMutability": "payable",
        "type": "function"
    },
    {
        "constant": true,
        "inputs": [],
        "name": "matchResult",
        "outputs": [
            {
                "name": "scoreOne",
                "type": "uint256"
            },
            {
                "name": "scoreTwo",
                "type": "uint256"
            }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [
            {
                "name": "_matchId",
                "type": "uint256"
            },
            {
                "name": "_league",
                "type": "bytes32"
            },
            {
                "name": "_teamOne",
                "type": "bytes32"
            },
            {
                "name": "_teamTwo",
                "type": "bytes32"
            },
            {
                "name": "_matchTimestamp",
                "type": "uint256"
            },
            {
                "name": "_executionDelay",
                "type": "uint256"
            },
            {
                "name": "_price",
                "type": "uint256"
            }
        ],
        "payable": true,
        "stateMutability": "payable",
        "type": "constructor"
    },
    {
        "anonymous": false,
        "inputs": [
            {
                "indexed": false,
                "name": "result",
                "type": "string"
            }
        ],
        "name": "OraclizeLog",
        "type": "event"
    },
    {
        "anonymous": false,
        "inputs": [
            {
                "indexed": true,
                "name": "addr",
                "type": "address"
            },
            {
                "indexed": false,
                "name": "scoreOne",
                "type": "uint256"
            },
            {
                "indexed": false,
                "name": "scoreTwo",
                "type": "uint256"
            }
        ],
        "name": "newSubscriber",
        "type": "event"
    },
    {
        "anonymous": false,
        "inputs": [
            {
                "indexed": false,
                "name": "scoreOne",
                "type": "uint256"
            },
            {
                "indexed": false,
                "name": "scoreTwo",
                "type": "uint256"
            }
        ],
        "name": "betResolved",
        "type": "event"
    }
];

App = {
    web3Provider: null,
    account: null,
    MatchInstance: null,
    MatchInstancePrice: null,
    matches: {},
    getAccount: function () {
        return new Promise((resolve, reject) => {
            web3.eth.getAccounts(function (error, accounts) {
                if (error) {
                    return reject(error);
                } else {
                    return resolve(accounts[0]);
                }
            });
        });
    },

    initWeb3: function () {
        return new Promise((resolve, reject) => {
            if (typeof web3 !== 'undefined') {
                App.web3Provider = web3.currentProvider;
            } else {
                App.web3Provider = new Web3.providers.HttpProvider('http://localhost:8545');
                alert("Please install Metamask before proceeding.");
                return;
            }
            web3 = new Web3(App.web3Provider);
            if (web3 == null || typeof web3 === 'undefined') {
                return reject("Something went wrong");
            } else {
                return resolve("Successfully connected to Web3 Provider.");
            }
        });
    },

    createBetContract: function (_matchId) {
        let match = App.matches[_matchId];
        let price = prompt("Enter the bet price.");
        if (isNaN(+price)) {
            console.log("Enter a valid bet price.");
            return;
        }
        let _league = match["league"];
        let _teamOne = match["homeTeam"]["name"];
        let _teamTwo = match["awayTeam"]["name"];
        let _matchTimestamp = Math.floor(new Date(match["utcDate"]).getTime() / 1000);
        let _executionDelay = _matchTimestamp + (3 * 60 * 60);
        let _price = +price * 1e18;
        console.log(+_matchId, _league, _teamOne, _teamTwo, _matchTimestamp, _executionDelay, _price);
        var SolidSportBet = web3.eth.contract(ABI);
        var SolidSportBetInstance = SolidSportBet.new(+_matchId, _league, _teamOne, _teamTwo, _matchTimestamp, _executionDelay, _price, {
                from: App.account,
                value: 0.01 * 1e18,
                data: '0x60806040526000600655600a60075560405160e080620036a783398101806040528101908080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190505050662386f26fc1000034101515156200008457600080fd5b86600881905550856009816000191690555084600a816000191690555083600b816000191690555082600c8190555081600d8190555080600e8190555073908e009ea04508db32933f463dec7d1d60aaa93f600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200012f6200013c640100000000026401000000009004565b50505050505050620019eb565b6060806060620001906040805190810160405280600381526020017f55524c00000000000000000000000000000000000000000000000000000000008152506200037d640100000000026401000000009004565b3073ffffffffffffffffffffffffffffffffffffffff16311115156200021e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600a8152602001807f6e6f20617069206665650000000000000000000000000000000000000000000081525060200191505060405180910390fd5b606060405190810160405280602281526020017f68747470733a2f2f6170692e6b72796b61732e6265742f76312f6d617463686581526020017f732f0000000000000000000000000000000000000000000000000000000000008152509250620002996008546200077e640100000000026401000000009004565b9150620003226040805190810160405280600581526020017f6a736f6e2800000000000000000000000000000000000000000000000000000081525084846040805190810160405280600581526020017f292e726177000000000000000000000000000000000000000000000000000000815250620008e0640100000000026401000000009004565b905062000377600d546040805190810160405280600381526020017f55524c0000000000000000000000000000000000000000000000000000000000815250836200093b640100000000026401000000009004565b50505050565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480620003ff57506000620003fd6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1662000f19640100000000026401000000009004565b145b15620004225762000420600062000f24640100000000026401000000009004565b505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015620004a857600080fd5b505af1158015620004bd573d6000803e3d6000fd5b505050506040513d6020811015620004d457600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151562000640576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015620005c257600080fd5b505af1158015620005d7573d6000803e3d6000fd5b505050506040513d6020811015620005ee57600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b83811015620006ec578082015181840152602081019050620006cf565b50505050905090810190601f1680156200071a5780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b1580156200073a57600080fd5b505af11580156200074f573d6000803e3d6000fd5b505050506040513d60208110156200076657600080fd5b81019080805190602001909291905050509050919050565b60606000806060600080861415620007ce576040805190810160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509450620008d7565b8593505b600084141515620007fb578280600101935050600a84811515620007f257fe5b049350620007d2565b826040519080825280601f01601f1916602001820160405280156200082f5781602001602082028038833980820191505090505b5091506001830390505b600086141515620008d357600a868115156200085157fe5b066030017f0100000000000000000000000000000000000000000000000000000000000000028282806001900393508151811015156200088d57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a86811515620008ca57fe5b04955062000839565b8194505b50505050919050565b606062000931856200091c8662000907878762000f46640100000000026401000000009004565b62000f46640100000000026401000000009004565b62000f46640100000000026401000000009004565b9050949350505050565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480620009bf57506000620009bd6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1662000f19640100000000026401000000009004565b145b15620009e257620009e0600062000f24640100000000026401000000009004565b505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801562000a6857600080fd5b505af115801562000a7d573d6000803e3d6000fd5b505050506040513d602081101562000a9457600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151562000c00576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801562000b8257600080fd5b505af115801562000b97573d6000803e3d6000fd5b505050506040513d602081101562000bae57600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889856040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b8381101562000cac57808201518184015260208101905062000c8f565b50505050905090810190601f16801562000cda5780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b15801562000cfa57600080fd5b505af115801562000d0f573d6000803e3d6000fd5b505050506040513d602081101562000d2657600080fd5b8101908080519060200190929190505050905062030d403a02670de0b6b3a76400000181111562000d5e576000600102915062000f11565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663adf59f99828787876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b8381101562000e1757808201518184015260208101905062000dfa565b50505050905090810190601f16801562000e455780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b8381101562000e8057808201518184015260208101905062000e63565b50505050905090810190601f16801562000eae5780820380516001836020036101000a031916815260200191505b50955050505050506020604051808303818588803b15801562000ed057600080fd5b505af115801562000ee5573d6000803e3d6000fd5b50505050506040513d602081101562000efd57600080fd5b810190808051906020019092919050505091505b509392505050565b6000813b9050919050565b600062000f3f62000f9e640100000000026401000000009004565b9050919050565b606062000f968383602060405190810160405280600081525060206040519081016040528060008152506020604051908101604052806000815250620014f6640100000000026401000000009004565b905092915050565b60008062000fcf731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed62000f19640100000000026401000000009004565b11156200108357731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620010796040805190810160405280600b81526020017f6574685f6d61696e6e657400000000000000000000000000000000000000000081525062001920640100000000026401000000009004565b60019050620014f3565b6000620010b373c03a2615d5efaf5f49f60b7bb6583eaec212fdf162000f19640100000000026401000000009004565b1115620011675773c03a2615d5efaf5f49f60b7bb6583eaec212fdf16000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200115d6040805190810160405280600c81526020017f6574685f726f707374656e33000000000000000000000000000000000000000081525062001920640100000000026401000000009004565b60019050620014f3565b60006200119773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e62000f19640100000000026401000000009004565b11156200124b5773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620012416040805190810160405280600981526020017f6574685f6b6f76616e000000000000000000000000000000000000000000000081525062001920640100000000026401000000009004565b60019050620014f3565b60006200127b73146500cfd35b22e4a392fe0adc06de1a1368ed4862000f19640100000000026401000000009004565b11156200132f5773146500cfd35b22e4a392fe0adc06de1a1368ed486000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620013256040805190810160405280600b81526020017f6574685f72696e6b65627900000000000000000000000000000000000000000081525062001920640100000000026401000000009004565b60019050620014f3565b60006200135f736f485c8bf6fc43ea212e93bbf8ce046c7f1cb47562000f19640100000000026401000000009004565b1115620013c457736f485c8bf6fc43ea212e93bbf8ce046c7f1cb4756000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050620014f3565b6000620013f47320e12a1f859b3feae5fb2a0a32c18f5a65555bbf62000f19640100000000026401000000009004565b111562001459577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050620014f3565b6000620014897351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa62000f19640100000000026401000000009004565b1115620014ee577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050620014f3565b600090505b90565b6060806060806060806060806000808e98508d97508c96508b95508a94508451865188518a518c51010101016040519080825280601f01601f191660200182016040528015620015555781602001602082028038833980820191505090505b50935083925060009150600090505b88518110156200161b5788818151811015156200157d57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000028383806001019450815181101515620015dd57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505062001564565b600090505b8751811015620016d75787818151811015156200163957fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f01000000000000000000000000000000000000000000000000000000000000000283838060010194508151811015156200169957fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505062001620565b600090505b865181101562001793578681815181101515620016f557fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f01000000000000000000000000000000000000000000000000000000000000000283838060010194508151811015156200175557fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050620016dc565b600090505b85518110156200184f578581815181101515620017b157fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f01000000000000000000000000000000000000000000000000000000000000000283838060010194508151811015156200181157fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505062001798565b600090505b84518110156200190b5784818151811015156200186d57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000028383806001019450815181101515620018cd57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505062001854565b82995050505050505050505095945050505050565b8060029080519060200190620019389291906200193c565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200197f57805160ff1916838001178555620019b0565b82800160010185558215620019b0579182015b82811115620019af57825182559160200191906001019062001992565b5b509050620019bf9190620019c3565b5090565b620019e891905b80821115620019e4576000816000905550600101620019ca565b5090565b90565b611cac80620019fb6000396000f30060806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806327dc297e1461007257806338bbfa50146100e9578063565974d3146101a6578063843708131461021a578063df7bf70414610244575b600080fd5b34801561007e57600080fd5b506100e76004803603810190808035600019169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610276565b005b3480156100f557600080fd5b506101a46004803603810190808035600019169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061044d565b005b3480156101b257600080fd5b506101bb610452565b604051808981526020018860001916600019168152602001876000191660001916815260200186600019166000191681526020018581526020018481526020018381526020018281526020019850505050505050505060405180910390f35b6102426004803603810190808035906020019092919080359060200190929190505050610490565b005b34801561025057600080fd5b5061025961060b565b604051808381526020018281526020019250505060405180910390f35b61027e610622565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806103045750600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b801561031257506000600654145b1515610386576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f496e76616c6964204f7261636c652043616c6c6261636b00000000000000000081525060200191505060405180910390fd5b7fb749f9f34ea0f118080413f464339dbd20e14dc877db555d47b85ff4f418d649816040518080602001828103825283818151815260200191508051906020019080838360005b838110156103e85780820151818401526020810190506103cd565b50505050905090810190601f1680156104155780820380516001836020036101000a031916815260200191505b509250505060405180910390a18060149080519060200190610438929190611bba565b50610441610980565b610449610fe7565b5050565b505050565b600080600080600080600080600854600954600a54600b54600c54600d54600e54600654975097509750975097509750975097509091929394959697565b3373ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff161480156104cd5750600e543410155b80156104db57506103e88211155b80156104e957506103e88111155b15156104f457600080fd5b600f6060604051908101604052803373ffffffffffffffffffffffffffffffffffffffff168152602001848152602001838152509080600181540180825580915050906001820390600052602060002090600302016000909192909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201555050503373ffffffffffffffffffffffffffffffffffffffff167fd9fd7ff1b2e807f687c0bbd788ba5362d0e7c7bdcdbea264adf9457c9e2b35ec8383604051808381526020018281526020019250505060405180910390a25050565b600080601060010154601060020154915091509091565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480610692575060006106906000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611175565b145b156106a3576106a16000611180565b505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561072857600080fd5b505af115801561073c573d6000803e3d6000fd5b505050506040513d602081101561075257600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156108ba576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561083e57600080fd5b505af1158015610852573d6000803e3d6000fd5b505050506040513d602081101561086857600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561094057600080fd5b505af1158015610954573d6000803e3d6000fd5b505050506040513d602081101561096a57600080fd5b8101908080519060200190929190505050905090565b600080600080600080610a6260148054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a225780601f106109f757610100808354040283529160200191610a22565b820191906000526020600020905b815481529060010190602001808311610a0557829003601f168201915b50505050506040805190810160405280600181526020017f3000000000000000000000000000000000000000000000000000000000000000815250611191565b15610a6c57610fdf565b610b1160148054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b055780601f10610ada57610100808354040283529160200191610b05565b820191906000526020600020905b815481529060010190602001808311610ae857829003601f168201915b50505050506000611357565b9550620f423f861115610b2357610fdf565b60016006819055506103e886811515610b3857fe5b0494506103e88502860393506060604051908101604052803373ffffffffffffffffffffffffffffffffffffffff16815260200186815260200185815250601060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201559050506402540be4009150600090505b600f80549050811015610f9f57610d036010606060405190810160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282015481525050600f83815481101515610c7a57fe5b9060005260206000209060030201606060405190810160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201548152505061164b565b15610f9257610e1b600f82815481101515610d1a57fe5b9060005260206000209060030201606060405190810160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815250506010606060405190810160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815250506116bd565b925081831015610ee15782915060136000610e369190611c3a565b6013600f82815481101515610e4757fe5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610f91565b81831415610f90576013600f82815481101515610efa57fe5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505b5b5b8080600101915050610be3565b7ffce25d0084d4e4c40132a93c5b5630453901e52fb4e21103e4c07802e8a36ada8585604051808381526020018281526020019250505060405180910390a15b505050505050565b600080600060075460640392503073ffffffffffffffffffffffffffffffffffffffff16319150600060138054905011156110d45760646013805490500283830281151561103157fe5b049250600090505b6013805490508110156110d35760138181548110151561105557fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc849081150290604051600060405180830381858888f193505050501580156110c5573d6000803e3d6000fd5b508080600101915050611039565b5b3073ffffffffffffffffffffffffffffffffffffffff16319150606460075483028115156110fe57fe5b04600781905550600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6007549081150290604051600060405180830381858888f1935050505015801561116f573d6000803e3d6000fd5b50505050565b6000813b9050919050565b600061118a6116ec565b9050919050565b6000815183511415156111a75760009050611351565b816040516020018082805190602001908083835b6020831015156111e057805182526020820191506020810190506020830392506111bb565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b6020831015156112495780518252602082019150602081019050602083039250611224565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060001916836040516020018082805190602001908083835b6020831015156112b3578051825260208201915060208101905060208303925061128e565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b60208310151561131c57805182526020820191506020810190506020830392506112f7565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020600019161490505b92915050565b6000606060008060008693506000925060009150600090505b835181101561162c5760307f01000000000000000000000000000000000000000000000000000000000000000284828151811015156113ab57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916101580156114c3575060397f010000000000000000000000000000000000000000000000000000000000000002848281518110151561145357fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191611155b156115745781156114e65760008614156114dc5761162c565b8580600190039650505b600a83029250603084828151811015156114fc57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f01000000000000000000000000000000000000000000000000000000000000009004038301925061161f565b602e7f01000000000000000000000000000000000000000000000000000000000000000284828151811015156115a657fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141561161e57600191505b5b8080600101915050611370565b600086111561163e5785600a0a830292505b8294505050505092915050565b60008260400151836020015111801561166b575081604001518260200151115b8061169057508260400151836020015110801561168f575081604001518260200151105b5b806116b55750826040015183602001511480156116b4575081604001518260200151145b5b905092915050565b60006116d183604001518360400151611b7b565b6116e384602001518460200151611b7b565b01905092915050565b60008061170c731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed611175565b11156117ad57731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506117a46040805190810160405280600b81526020017f6574685f6d61696e6e6574000000000000000000000000000000000000000000815250611ba0565b60019050611b78565b60006117cc73c03a2615d5efaf5f49f60b7bb6583eaec212fdf1611175565b111561186d5773c03a2615d5efaf5f49f60b7bb6583eaec212fdf16000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506118646040805190810160405280600c81526020017f6574685f726f707374656e330000000000000000000000000000000000000000815250611ba0565b60019050611b78565b600061188c73b7a07bcf2ba2f2703b24c0691b5278999c59ac7e611175565b111561192d5773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506119246040805190810160405280600981526020017f6574685f6b6f76616e0000000000000000000000000000000000000000000000815250611ba0565b60019050611b78565b600061194c73146500cfd35b22e4a392fe0adc06de1a1368ed48611175565b11156119ed5773146500cfd35b22e4a392fe0adc06de1a1368ed486000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506119e46040805190810160405280600b81526020017f6574685f72696e6b656279000000000000000000000000000000000000000000815250611ba0565b60019050611b78565b6000611a0c736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475611175565b1115611a6f57736f485c8bf6fc43ea212e93bbf8ce046c7f1cb4756000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611b78565b6000611a8e7320e12a1f859b3feae5fb2a0a32c18f5a65555bbf611175565b1115611af1577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611b78565b6000611b107351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa611175565b1115611b73577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611b78565b600090505b90565b6000818311611b905782820383830302611b98565b818303828403025b905092915050565b8060029080519060200190611bb6929190611bba565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611bfb57805160ff1916838001178555611c29565b82800160010185558215611c29579182015b82811115611c28578251825591602001919060010190611c0d565b5b509050611c369190611c5b565b5090565b5080546000825590600052602060002090810190611c589190611c5b565b50565b611c7d91905b80821115611c79576000816000905550600101611c61565b5090565b905600a165627a7a72305820c591d8e497329a1c2ed87b635d5581a5934774d163d071c41b7d1038156295110029',
                gas: '4700000'
            },

            function (err, deployedContract) {
                if (!err) {
                    if (!deployedContract.address) {
                        console.log(deployedContract["transactionHash"]);
                        $('#solidBetTransactionModal').modal({
                            keyboard: false,
                            show: true
                        });

                        $.ajax({
                            method: 'POST',
                            contentType: 'application/json',
                            url: '/v1/matches/',
                            data: JSON.stringify({
                                account: App.account,
                                matchId: _matchId,
                                transactionHash: deployedContract["transactionHash"],
                            }),
                            success: function (data, textStatus, jqXHR) {
                                $("#solidBetTransactionModalBody").html(`Successfully deployed contract for match: ${_matchId}<br/>Track your transaction on the ropsten network by clicking <a href="https://ropsten.etherscan.io/tx/${deployedContract["transactionHash"]}">here</a>`);
                            },
                            error: function (jqXHR, textStatus, errorThrown) {
                                console.log('Failed to sign in.');
                            }
                        });

                    } else {
                        console.log(deployedContract.address);
                    }
                }
            }
            )
        ;
    },

    getMatches: function () {
        $.ajax({
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded'
            },
            method: 'GET',
            url: base_url + '/v1/matches',
            success: function (data, textStatus, jqXHR) {
                data.forEach(match => {
                    App.matches[match.id] = match.data;
                    let content = `<tr>`;
                    content += `<td>${match["id"]}</td>`;
                    content += `<td>${match["data"]["league"]}</td>`;
                    content += `<td>${match["data"]["homeTeam"]["name"]}</td>`;
                    content += `<td>${match["data"]["awayTeam"]["name"]}</td>`;
                    content += `<td>${match["data"]["utcDate"]}</td>`;
                    content += `<td><a href="${base_url}/matches/${match["id"]}" target="_blank"><button type="button" class="btn btn-primary">View details</button></a></td>`;
                    content += `<td><a href="${base_url}/matches/${match["id"]}/bets" target="_blank"><button type="button" class="btn btn-primary">View bets</button></a></td>`;
                    content += `<td><button type="button" class="btn btn-primary" onclick=App.createBetContract(${match["id"]})>Create Contract</button></td>`;
                    content += `</tr>`;
                    $("#upcoming_matches_table").prepend(content)
                });
            },
            error: function (jqXHR, textStatus, errorThrown) {

            }
        });
    },

    getMatchDetails: function (match_id) {
        $.ajax({
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded'
            },
            method: 'GET',
            url: `${base_url}/v1/matches/${match_id}`,
            success: function (data, textStatus, jqXHR) {
                let content = "";
                content += `<b>League</b>: ${data['league']}<br/>`;
                content += `<b>Time</b>: ${new Date(data['timestamp'] * 1000)}<br/>`;
                content += `<b>Status</b>: ${data['status']}<br/>`;
                content += `<b>Team one</b>: ${data['teamOne']['name']}<br/>`;
                content += `<b>Team two</b>: ${data['teamTwo']['name']}<br/>`;
                content += `<b>Team one score</b>: ${data['teamOne']['score']}<br/>`;
                content += `<b>Team two score</b>: ${data['teamTwo']['score']}<br/>`;
                content += `<b>Raw score</b>: ${data['raw']}<br/>`;
                content += `<b>Bets</b>: <a href="${base_url}/matches/${match_id}/bets" target="_blank">here</a><br/>`;
                $("#match_details").html(content);
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.log(errorThrown);
            }
        });
    },

    getMatchContracts: function (match_id) {
        $.ajax({
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded'
            },
            method: 'GET',
            url: `${base_url}/v1/matches/${match_id}/bets`,
            success: function (data, textStatus, jqXHR) {
                data.forEach(contract => {
                    let content = "";
                    content += `<tr>`;
                    content += `<td>${contract['data']['matchId']}</td>`;
                    content += `<td>${contract['id']}</td>`;
                    content += `<td><a href="${base_url}/matches/${match_id}/bets/${contract['id']}" target="_blank">here</a></td>`;
                    content += `</tr>`;
                    $("#match_contracts").prepend(content);
                });
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.log(errorThrown);
            }
        });
    },

    getMatchContract: function (matchId, betId) {
        $.ajax({
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded'
            },
            method: 'GET',
            url: `${base_url}/v1/matches/${matchId}/bets/${betId}`,
            success: function (_data, textStatus, jqXHR) {
                if (_data.length === 1) {
                    let data = _data[0];
                    let MatchContract = web3.eth.contract(ABI);
                    App.MatchInstance = MatchContract.at(data['data']['contractAddress']);


                    //
                    App.MatchInstance.details(function (err, res) {
                        if (!err) {
                            App.MatchInstancePrice = res[6].valueOf();
                            let _matchId = res[0];
                            let _league = web3.toAscii(res[1]);
                            let _teamOne = web3.toAscii(res[2]);
                            let _teamTwo = web3.toAscii(res[3]);
                            let _matchTimestamp = (res[4]).valueOf() * 1000;
                            let _executionDelay = (res[5]).valueOf() * 1000;
                            let _price = (res[6]).valueOf() / 1e18;
                            let _status = res[7];
                            let content = "";
                            content += `<b>Match #</b>: ${_matchId}<br/>`;
                            content += `<b>Bet #</b>: ${betId}<br/>`;
                            content += `<b>League</b>: ${_league}<br/>`;
                            content += `<b>Team one</b>: ${_teamOne}<br/>`;
                            content += `<b>Team two</b>: ${_teamTwo}<br/>`;
                            content += `<b>Time</b>: ${new Date(_matchTimestamp)}<br/>`;
                            content += `<b>Execution delay</b>: ${new Date(_executionDelay)}<br/>`;
                            content += `<b>Price</b>: ${_price} ETH <br/>`;
                            content += `<b>Status</b>: ${_status}<br/>`;
                            $("#bet_details").html(content);
                        }
                    });

                    let allEvents = App.MatchInstance.newSubscriber({
                        // address: App.account
                    }, {
                        fromBlock: 0,
                        toBlock: 'latest',
                    });

                    allEvents.get((err, eventResult) => {
                        if (!err) {
                            eventResult.forEach(eventR => {
                                let result = eventR['args'];
                                let content = `<tr>`;
                                content += `<td>${result['addr']}</td>`;
                                content += `<td>${result['scoreOne']}</td>`;
                                content += `<td>${result['scoreTwo']}</td>`;
                                content += `</tr>`;
                                $("#bet_subscribers").prepend(content)
                            });
                        }
                    });
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.log(errorThrown);
            }
        });
    },

    subscribeMatchContract: function () {
        let inputTeamScoreOne = $("#inputTeamScoreOne").val();
        let inputTeamScoreTwo = $("#inputTeamScoreTwo").val();
        console.log("Team one score: " + inputTeamScoreOne);
        console.log("Team two score: " + inputTeamScoreTwo);
        console.log(App.MatchInstance.address);
        App.MatchInstance.subscribe(inputTeamScoreOne, inputTeamScoreTwo, {
            value: App.MatchInstancePrice,
            from: App.account
        }, function (err, res) {
            if (err) {
                console.log(err);
            } else {
                console.log(res);
            }
        });
    },

    load: async () => {
        App.account = await App.getAccount();
    },

};

function toHex(s) {
    var hex = '';
    for (var i = 0; i < s.length; i++) {
        hex += '' + s.charCodeAt(i).toString(16);
    }
    return `0x${hex}`;
}

function waitSeconds(seconds) {
    return new Promise((resolve, reject) => {
        setTimeout(() => {
            resolve();
        }, seconds * 1000);
    });
}

function dateToSeconds(current_date) {
    return Math.floor(new Date(current_date).getTime() / 1000);
}

$('#solidBetTransactionModal').on('hidden.bs.modal', function (e) {
    $('#solidBetTransactionModalBody').html('');
});

onload = async () => {
    $(document).on('click', '#subscribe_button', App.subscribeMatchContract);

    await App.initWeb3();
    await App.load();
    let pathname = window.location.pathname;
    let link = window.location.href;
    let splitted = link.replace("http://", "");

    // console.log(pathname);
    // console.log(window.location.href);
    splitted = splitted.split("/");
    if (splitted.length === 2 && splitted[1] === 'matches') {
        await App.getMatches();
    }
    if (splitted.length === 3 && splitted[1] === 'matches' && !isNaN(+splitted[2])) {
        await App.getMatchDetails(+splitted[2]);
    }

    if (splitted.length === 4 && splitted[1] === 'matches' && !isNaN(+splitted[2]) && splitted[3] === 'bets') {
        await App.getMatchContracts(+splitted[2]);
    }

    if (splitted.length === 5 && splitted[1] === 'matches' && !isNaN(+splitted[2]) && splitted[3] === 'bets') {
        App.getMatchContract(+splitted[2], splitted[4]);
    }
};